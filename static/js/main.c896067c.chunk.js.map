{"version":3,"sources":["assets/icons/logo.png","assets/icons/arrow_black.svg","assets/icons/request.svg","assets/icons/truck.svg","assets/icons/next_arrow.svg","assets/icons/right-arrow.svg","context/ModalContext.js","context/AuthUserContext.js","context/DirectionContext.js","style/styles.js","components/Modal/ErrorModal.js","components/Modal/SuccessModal.js","context/ListOfItemsContext.js","app/components/button/index.js","components/Main/Content.js","containers/Content/ContentLogic.js","components/Auth/SignOut/SignOutButton.js","components/Navbar/Navbar.js","Roles.js","components/Header/Header.js","components/Auth/Login/LoginForm.js","components/Auth/Login/LoginLogicForm.js","components/Auth/Login/Login.js","containers/Auth/Login/LoginLogic.js","components/Auth/SignUp/SignUpForm.js","components/Auth/SignUp/SignUpLogicForm.js","components/Auth/SignUp/SignUp.js","containers/Auth/SignUp/SignUpLogic.js","components/Auth/ForgotPassword/ForgotForm.js","components/Auth/ForgotPassword/ForgotLogicForm.js","components/Auth/ForgotPassword/ForgotPassword.js","containers/Auth/ForgotPassword/ForgotPassword.js","components/Auth/Auth.js","domain/truck/list.js","app/components/button/back.js","app/components/field/index.js","domain/truck/add-form.js","domain/truck/api.js","domain/truck/index.js","domain/request/request-status.js","domain/request/utils.js","domain/request/list.js","domain/request/api.js","domain/driver/api.js","domain/requestTruck/googleSearch.js","domain/requestTruck/RequestComponent.js","app/components/button/button.js","app/components/button/print.js","components/Modal/DefaultModal.js","app/components/spinner/index.js","domain/request/details.js","app/utils/date.js","domain/request/assign-form.js","domain/request/approve-form.js","domain/request/reject-from.js","domain/request/assigned-drivers.js","domain/request/waybill.js","domain/request/view-details.js","domain/request/index.js","domain/driver/list.js","domain/driver/index.js","domain/pricing/list.js","domain/pricing/add-form.js","domain/pricing/api.js","domain/pricing/index.js","domain/contracts/list.js","domain/contracts/add-form.js","domain/contracts/api.js","domain/contracts/index.js","components/Main/Main.js","containers/Main/MainLogic.js","withAuthentication.js","withRtlDirection.js","withModals.js","history.js","interceptor.js","App.js","index.js","assets/icons/site-logo.png","assets/icons/arrow.svg","assets/icons/driver.svg"],"names":["module","exports","modalContext","React","createContext","errorModal","openSuccessModal","errorDescription","successDescription","toggleErrorModal","toggleSuccessModal","AuthUserContext","authUser","DirectionContext","rtl","changeDirection","customStyles","content","top","left","right","bottom","marginRight","transform","padding","boxShadow","borderRadius","border","minWidth","translate","props","ModalContext","Consumer","value","isOpen","openErrorModal","contentLabel","appElement","document","getElementById","style","className","t","onClick","SuccessModal","direction","ListOfItemsContext","listOfItems","updateListOfItems","changeVisible","allFile","label","Content","title","addButtonTitle","Link","to","addLink","children","ContentLogic","setState","lastVisible","firstVisible","state","numberPerPage","loading","loadListOfItems","loadingList","totalElements","axios","method","url","then","response","data","length","catch","e","console","error","this","Provider","Component","SignOutButton","signUpHandler","window","location","reload","src","ArrowBlack","alt","items","icon","requestIcon","link","truckIcon","admin","driversIcon","userType","map","item","key","Header","activeBtn","changeLanguage","lng","i18n","addEventListener","resize","bind","currentWidth","screen","width","history","active","display","margin","language","siteLogo","NavLink","LoginForm","values","touched","errors","handleSubmit","handleChange","handleBlur","changeScreenAuth","onSubmit","name","placeholder","type","email","onChange","onBlur","password","disabled","LoginLogicForm","withFormik","mapPropsToValues","a","setSubmitting","bodyFormData","FormData","set","status","message","LoginLogic","openLoginModal","toggleLoginModal","toggleSignUpModal","SignUpForm","dirty","idNumber","confirmPassword","mobile","SignUpLogicForm","using2FA","swal","Arrow","SignUp","propTypes","toggleModal","PropTypes","func","SignUpLogic","ForgotForm","ForgotLogicForm","validationSchema","object","shape","string","required","changeSendStatus","ForgotPassword","sendSuccess","ForgotPasswordLogic","Auth","login","signup","forgot","List","onFetch","res","columns","accessor","Fragment","showPageSizeOptions","minRows","filterable","showPageJump","BackButton","FieldWrapper","TruckSchema","Yup","arabicName","englishName","TruckForm","initialValues","TRUCKS_URL","getTrucks","Container","handleAddTruck","truck","post","api","push","toast","success","log","truckId","Switch","Route","exact","path","render","handleFetchTrucks","NEW","APPROVED","CLIENT_APPROVED","ASSIGNED","ARRIVAL_TO_PICKUP","OUT_FOR_DELIVERY","ARRIVE_AT_DESTINATION","DELIVERED","REJECTED","CLIENT_CANCELD","getRequestStatus","renderActionButtons","row","requestStatus","formatDate","date","locale","Date","toLocaleDateString","year","month","day","hour","minute","isAdmin","roles","filter","f","isArabic","show","header","Cell","RightArrow","id","d","showAddForCorp","getTdProps","rowInfo","column","instance","handleOriginal","original","REQUESTS_URL","DRIVERS_URL","getDrivers","GoogleSuggest","search","field","address","handleInputChange","target","handleSelectSuggest","geocodedPrediction","originalPrediction","formatted_address","form","setFieldValue","geometry","lat","handleNoResult","handleStatusUpdate","params","libraries","googleMaps","autocompletionRequest","input","onNoResult","onSelectSuggest","onStatusUpdate","textNoResults","customRender","prediction","description","AddFormSchema","weight","min","max","origin","destination","numberOfTrucks","AddForm","originLat","originLong","destinationLat","destinationLong","component","truckTypes","tt","labelAr","labelEn","RequestComponent","request","onGetTrucks","trucks","forEach","Button","PrintButton","print","isModalOpen","onRequestClose","closeModal","Spinner","DetailsRow","DetailsField","r","isEnum","isDate","g","i","j","toLocalDate","parse","user","firstName","lastName","corporate","AssignDriverForm","requestId","match","drivers","options","selected","index","deleteDriver","rowIndex","getOptions","driver","renderSelect","getSelectedDrivers","onGetDrivers","driverId","fullName","color","showPagination","ApproveFormSchema","price","ApproveForm","ApproveRequestForm","RejectFormSchema","reason","RejectForm","RejectRequestForm","AssignedDrivers","update","confirmAction","msg","callback","confirmAlert","customUI","onClose","renderActions","onPickup","driverRequestId","onOutForDelivery","onArriveAtDestination","onComplete","sortable","defaultSorted","desc","WayBill","Logo","awbNumber","height","fontSize","truckType","plateNo","licenseNumber","iqamaNumber","truckOwnerName","rowSpan","colSpan","loadType","amount","loggedInUserName","ASSIGN_FORM","REJECT_FORM","APPROVE_FORM","ViewDetails","activeModal","openModal","formType","actions","confirmCancelAction","onCancel","renderModalConent","onApprove","onReject","onAssign","printable","onGetDetails","isWayBillPrintable","onGetWaybillDetails","waybill","showPrint","onGetAssignedDrivers","handleFetchRequests","handleApproveRequest","handleRejectRequest","handleCancelRequest","handleAssignRequest","driversIds","handleGetDrivers","handleGetAssignedDrivers","requesdId","handleGetDetails","handleAddRequest","handleGetTruckTypes","trkApi","handleGetWaybill","handlePickup","handleOutForDelivery","handleArriveAtDestination","handleComplete","handleFetchDrivers","PricingSchema","discount","distance","freightId","totalPrice","PricingForm","PRICING_URL","handleAddPricing","pricing","pricingId","handleFetchPricing","ContractSchema","customerId","startContract","finishContract","ContractsForm","CONTRACT_URL","addContract","pricingIdList","approved","complete","handleAddContracts","handleFetchContracts","Main","autoClose","Request","Truck","Driver","Pricing","Contracts","MainLogic","withAuthentication","err","withRtlDirection","withModals","createBrowserHistory","interceptors","use","config","token","localStorage","getItem","headers","Promise","reject","setItem","clear","Home","Redirect","withError","Router","i18next","init","interpolation","escapeValue","resources","en","common","common_en","ar","common_ar","ReactDOM","initialLanguage"],"mappings":"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","file":"static/js/main.c896067c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3f908cd8.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow_black.1c1c954c.svg\";","module.exports = __webpack_public_path__ + \"static/media/request.e904a14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/truck.c6716a39.svg\";","module.exports = __webpack_public_path__ + \"static/media/next_arrow.d3baef83.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.04b81ea4.svg\";","import React from 'react';\r\n\r\nconst modalContext = React.createContext({\r\n  errorModal: false,\r\n  openSuccessModal: false,\r\n  errorDescription: \"\",\r\n  successDescription: \"\",\r\n  toggleErrorModal: () => {},\r\n  toggleSuccessModal: () => {}\r\n\r\n});\r\n\r\nexport default modalContext;","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext({\r\n  authUser: null,\r\n});\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nconst DirectionContext = React.createContext({\r\n  rtl: false,\r\n  changeDirection: () => {}\r\n});\r\n\r\nexport default DirectionContext;","export const customStyles = {\r\n  content : {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    padding: '40px 50px',\r\n    boxShadow: '0 2px 30px rgba(0, 0, 0, 0.06)',\r\n    borderRadius: '10px',\r\n    border: 'none',\r\n    minWidth: '600px'\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { customStyles } from \"../../style/styles\";\r\nimport ModalContext from \"../../context/ModalContext\";\r\nimport Modal from 'react-modal';\r\nimport \"./Modal.css\";\r\nimport {translate} from \"react-i18next\";\r\n\r\nconst ErrorModal = props => (\r\n  <ModalContext.Consumer>\r\n    { value => (\r\n      <Modal\r\n        isOpen={value.openErrorModal}\r\n        contentLabel=\"Error\"\r\n        appElement={document.getElementById('root')}\r\n        style={customStyles}>\r\n        <p className=\"modal__title\">{props.t(\"errorMessage.errorTitle\")}</p>\r\n        <p className=\"modal__message\">{value.errorDescription}</p>\r\n        <div\r\n          className=\"modal__button\"\r\n          onClick={() => value.toggleErrorModal()}>\r\n          {props.t(\"errorMessage.errorBtnTitle\")}\r\n        </div>\r\n      </Modal>\r\n    )}\r\n  </ModalContext.Consumer>\r\n);\r\n\r\nexport default translate(\"common\")(ErrorModal);","import React from \"react\";\r\nimport { customStyles } from \"../../style/styles\";\r\nimport ModalContext from \"../../context/ModalContext\";\r\nimport Modal from 'react-modal';\r\nimport \"./Modal.css\";\r\nimport DirectionContext from \"../../context/DirectionContext\";\r\n\r\nconst SuccessModal = () => (\r\n  <ModalContext.Consumer>\r\n    { value => (\r\n      <DirectionContext.Consumer>\r\n      {direction =>\r\n      <Modal\r\n        isOpen={value.openSuccessModal}\r\n        contentLabel=\"Success\"\r\n        appElement={document.getElementById('root')}\r\n        style={customStyles}>\r\n        <p className={direction.rtl === true ? \"modal__title rtl\" : \"modal__title\"}></p>\r\n        <p className={direction.rtl === true ? \"modal__message rtl\" : \"modal__message\"}>{value.successDescription}</p>\r\n        <div\r\n          className=\"modal__button\"\r\n          onClick={() => value.toggleSuccessModal()}>\r\n          Okay\r\n        </div>\r\n      </Modal>\r\n      }\r\n      </DirectionContext.Consumer>\r\n    )}\r\n  </ModalContext.Consumer>\r\n);\r\n\r\nexport default SuccessModal;","import React from \"react\";\r\n\r\nconst ListOfItemsContext = React.createContext({\r\n  listOfItems: [],\r\n  updateListOfItems: () => {},\r\n  changeVisible: () => {},\r\n  allFile: null\r\n});\r\n\r\nexport default ListOfItemsContext;\r\n","import React from 'react';\r\nimport './style.css'\r\n\r\nexport default (props) => {\r\n    const { label, onClick } = props\r\n\r\n    return (\r\n        <button className=\"button\" onClick={onClick} {...props}>\r\n            {label}\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { translate } from \"react-i18next\";\r\nimport Button from '../../app/components/button'\r\nimport './style.css'\r\n\r\nconst Content = (props) => (\r\n  <div className=\"content-wrapper\">\r\n    <div className=\"content-header\">\r\n      <h2 className=\"page-title\">\r\n        {props.title}\r\n      </h2>\r\n      {props.addButtonTitle?\r\n        <Link to={props.addLink}>\r\n          <Button label={props.addButtonTitle} />\r\n        </Link>\r\n        : null\r\n      }\r\n    </div>\r\n    <div className=\"content\">\r\n      {props.children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport AuthUserContext from \"../../context/AuthUserContext\";\r\nimport ListOfItemsContext from \"../../context/ListOfItemsContext\";\r\nimport Content from \"../../components/Main/Content\";\r\nimport { translate } from \"react-i18next\";\r\n\r\nclass ContentLogic extends Component {\r\n  updateListOfItems = (listOfItems, allFile) => {\r\n    this.setState({ listOfItems, allFile })\r\n  };\r\n\r\n  changeVisible = (lastVisible, firstVisible) => {\r\n    this.setState({ lastVisible, firstVisible })\r\n  };\r\n\r\n  state = {\r\n    listOfItems: [],\r\n    numberPerPage: 10,\r\n    lastVisible: null,\r\n    firstVisible: null,\r\n    updateListOfItems: this.updateListOfItems,\r\n    changeVisible: this.changeVisible,\r\n    loading: false,\r\n    allFile: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadListOfItems()\r\n  }\r\n\r\n  loadListOfItems = () => {\r\n    const { numberPerPage } = this.state;\r\n    const { authUser, toggleErrorModal, t } = this.props;\r\n    const { changeVisible, updateListOfItems } = this;\r\n\r\n    const loadingList = (loading) => {\r\n      this.setState({ loading });\r\n    };\r\n\r\n    loadingList(true);\r\n    let listOfItems = [];\r\n    let totalElements = 0;\r\n    axios({\r\n      method: 'get',\r\n      url: '/api/v1/requests?status=-1&size=10'\r\n    }).then(response => {\r\n      listOfItems = response.data.content;\r\n      totalElements = response.data.totalElements;\r\n      updateListOfItems(listOfItems, totalElements);\r\n      changeVisible(listOfItems.length, listOfItems[0]);\r\n      loadingList(false);\r\n    }).catch((e) => {\r\n      console.error(e)\r\n      toggleErrorModal(t(\"errorMessage.errorLoad\"))\r\n    });\r\n\r\n    return {\r\n      listOfItems: listOfItems,\r\n      lastVisible: listOfItems.length - 1,\r\n      firstVisible: listOfItems[0],\r\n      allFile: totalElements,\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    const { rtl } = this.props;\r\n\r\n    return (\r\n      <ListOfItemsContext.Provider value={this.state}>\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            <Content\r\n              authUser={authUser}\r\n              loading={loading}\r\n              rtl={rtl}\r\n            />\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      </ListOfItemsContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate(\"common\")(ContentLogic);","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport ArrowBlack from \"../../../assets/icons/arrow_black.svg\"\r\n\r\n\r\nclass SignOutButton extends Component {\r\n  signUpHandler = () => {\r\n    axios({\r\n      method: 'get',\r\n      url: '/api/v1/logout'\r\n    })\r\n    // FIXME: do not use reload!\r\n    \r\n    // if (this.props.history.location.pathname === '/') {\r\n      window.location.reload()\r\n    // }else {\r\n    //   this.props.history.push('/login')\r\n    // }\r\n    \r\n    // window.location.reload()\r\n    \r\n  };\r\n\r\n  render(){\r\n    const { t } = this.props;\r\n    return(\r\n      <div\r\n        className=\"logout\"\r\n        onClick={this.signUpHandler}>\r\n        <span className=\"btn__text\">{t(\"auth.logout\")}</span>\r\n        <img\r\n          className=\"btn__icon\"\r\n          src={ArrowBlack}\r\n          alt=\"back\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignOutButton;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ADMIN } from '../../Roles'\r\nimport './Navbar.css'\r\nimport requestIcon from \"../../assets/icons/request.svg\"\r\nimport truckIcon from \"../../assets/icons/truck.svg\"\r\nimport driversIcon from '../../assets/icons/driver.svg'\r\n\r\nconst items = [\r\n    { label: 'navbar.requests', icon: requestIcon, link: '/requests'},\r\n    { label: 'navbar.trucks', icon: truckIcon, link: '/trucks', admin: true },\r\n    { label: 'navbar.drivers', icon: driversIcon, link: '/drivers', admin: true},\r\n    { label: 'navbar.pricing', icon: driversIcon, link: '/pricing', admin: true},\r\n    { label: 'navbar.contracts', icon: driversIcon, link: '/contracts', admin: true}\r\n]\r\n\r\nexport default (props) => {\r\n    const { userType } = props.authUser;\r\n    return (\r\n        <div className=\"navbar\">\r\n            <ul className=\"navbar-items\">\r\n                {items.map(item => {\r\n                    if ((item.admin && userType === ADMIN) || !item.admin) {\r\n                        return (\r\n                            <li key={item.label}>\r\n                                <Link to={item.link} className=\"navbar-item\">\r\n                                    <img className=\"navbar-icon\" src={item.icon} />\r\n                                    {props.t(item.label)}\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","\r\nexport const ADMIN = \"ADMIN\"\r\nexport const CORPORATE = \"CORPORATE\"\r\nexport const DRIVER = \"DRIVER\"\r\nexport const INDIVIDUAL = \"INDIVIDUAL\"","import React, { Component } from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport \"./Header.css\";\r\nimport SignOutButton from '../Auth/SignOut/SignOutButton';\r\nimport logo from '../../assets/icons/logo.png'\r\nimport smallLogo from '../../assets/icons/logo.png'\r\nimport siteLogo from '../../assets/icons/site-logo.png'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    activeBtn: \"en\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    this.resize();\r\n  }\r\n\r\n  changeLanguage = (lng) => {\r\n    const { i18n, changeDirection } = this.props;\r\n    this.setState({ activeBtn: lng });\r\n\r\n    if (lng === \"ar\") {\r\n      changeDirection(true);\r\n    } else {\r\n      changeDirection(false);\r\n    }\r\n    i18n.changeLanguage(lng);\r\n  };\r\n\r\n  resize() {\r\n    this.setState({ currentWidth: window.screen.width });\r\n  }\r\n\r\n  render() {\r\n    const { activeBtn, currentWidth } = this.state;\r\n    const { authUser } = this.props;\r\n    const { t, history, rtl, i18n } = this.props;\r\n    const active = rtl ? \"ar\" : activeBtn;\r\n    return (\r\n      <div>\r\n        <header className=\"header\">\r\n          <div style={{ display: \"inline-block\", margin: i18n.language === 'en' ? '0px auto 0px 0px' : '0px 0px 0px auto' }}>\r\n            <img width=\"160\" src={siteLogo}/>\r\n            <span className='badget'>نسخة تجريبية</span>\r\n          </div>\r\n          {authUser ?\r\n            <SignOutButton\r\n              history={history}\r\n              t={t}\r\n            />\r\n            : null}\r\n\r\n          <div className='lang'>\r\n            <div\r\n              className={\"ar\" === active ? \"lngBtn active\" : \"lngBtn\"}\r\n              onClick={() => this.changeLanguage(\"ar\")}>\r\n              {t(\"code.ar\")}\r\n            </div>\r\n            <div\r\n              className={\"en\" === active ? \"lngBtn active\" : \"lngBtn\"}\r\n              onClick={() => this.changeLanguage(\"en\")}>\r\n              {t(\"code.en\")}\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {\r\n          authUser?\r\n            <Navbar t={t} authUser={authUser} />\r\n          : null\r\n        }\r\n\r\n        <NavLink to={'/contracts'}>Contracts</NavLink>\r\n        <NavLink to={'/pricing'}>Contracts</NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate(\"common\")(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass LoginForm extends Component {\r\n  render() {\r\n    const {\r\n      values,\r\n      touched,\r\n      errors,\r\n      handleSubmit,\r\n      handleChange,\r\n      handleBlur,\r\n      changeScreenAuth,\r\n      t\r\n    } = this.props;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"email\"\r\n            placeholder={t('login.email')}\r\n            type=\"text\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"password\"\r\n            placeholder={t('login.password')}\r\n            type=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n        </div>\r\n        <p\r\n          className=\"link forgot\"\r\n          onClick={() => changeScreenAuth(false, false, true)}>\r\n          {t('login.forgotPassword')}\r\n        </p>\r\n        <button\r\n          className=\"btn btn__login submit\"\r\n          type=\"submit\"\r\n          disabled={!values.email || !values.password}>\r\n          {t('login.buttonTitle')}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  values: PropTypes.object,\r\n  touched: PropTypes.object,\r\n  errors: PropTypes.object,\r\n  handleSubmit: PropTypes.func,\r\n  handleChange: PropTypes.func,\r\n  handleBlur: PropTypes.func,\r\n  changeScreenAuth: PropTypes.func,\r\n};\r\n\r\nexport default LoginForm;\r\n","import { withFormik } from \"formik\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport axios from 'axios';\r\n\r\nconst LoginLogicForm = withFormik({\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n  }),\r\n  handleSubmit: async (values, { setSubmitting, props }) => {\r\n    // props.history.push('/login')\r\n      let bodyFormData = new FormData();\r\n      bodyFormData.set('username', values.email);\r\n      bodyFormData.set('password', values.password);\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/v1/login',\r\n        data: bodyFormData,\r\n      }).then((response) => {\r\n        if (response.status == 200) {\r\n          // FIXME: do not use reload! \r\n          // window.location.reload().\r\n          \r\n          // if (props.history.location.pathname === '/login') {\r\n             window.location.reload()\r\n          // } else {\r\n          //  props.history.push('/')\r\n          // }\r\n        }\r\n      }\r\n      ).catch((error) => {\r\n        props.toggleErrorModal(error.message);\r\n      })\r\n    setSubmitting(false);\r\n  },\r\n})(LoginForm);\r\n\r\nexport default (LoginLogicForm);","import React from \"react\";\r\nimport LoginLogicForm from \"./LoginLogicForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../Modal/ErrorModal\";\r\nimport {translate} from \"react-i18next\";\r\n\r\nconst Login = (props) => (\r\n  <div className=\"login auth__wrapper\">\r\n    <h3 className=\"title login__title\">{props.t('login.title')}</h3>\r\n    <LoginLogicForm\r\n      toggleErrorModal={props.toggleErrorModal}\r\n      changeScreenAuth={props.changeScreenAuth}\r\n      t={props.t}\r\n      history={props.history}\r\n    />\r\n    <p className=\"text__link\">\r\n      {props.t('login.newUser')}\r\n      <span\r\n        className=\"link active\"\r\n        onClick={() => props.changeScreenAuth(false, true, false)}\r\n      >\r\n        {props.t('login.signUp')}\r\n      </span>\r\n    </p>\r\n    <Modal />\r\n  </div>\r\n);\r\n\r\nLogin.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default translate(\"common\")(Login)\r\n","import React from \"react\";\r\nimport Login from \"../../../components/Auth/Login/Login\";\r\nimport ModalContext from \"../../../context/ModalContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoginLogic = (props) => (\r\n  <ModalContext.Consumer>\r\n    { value =>\r\n      <Login\r\n        openLoginModal={value.openLoginModal}\r\n        toggleErrorModal={value.toggleErrorModal}\r\n        toggleLoginModal={value.toggleLoginModal}\r\n        toggleSignUpModal={value.toggleSignUpModal}\r\n        changeScreenAuth={props.changeScreenAuth}\r\n        history={props.history}\r\n      />\r\n    }\r\n  </ModalContext.Consumer>\r\n);\r\n\r\nLoginLogic.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default LoginLogic;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass SignUpForm extends Component {\r\n  render() {\r\n    const {\r\n      values,\r\n      touched,\r\n      errors,\r\n      handleSubmit,\r\n      handleChange,\r\n      handleBlur,\r\n      dirty,\r\n      t,\r\n      history\r\n    } = this.props;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"name\"\r\n            placeholder={t(\"signup.name\")}\r\n            type=\"text\"\r\n            value={values.name}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.name && touched.name\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.name &&\r\n          touched.name &&\r\n          <span className=\"error__message\">{errors.name}</span>\r\n          }\r\n        </div>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"idNumber\"\r\n            placeholder={t(\"signup.idNumber\")}\r\n            type=\"text\"\r\n            value={values.idNumber}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.idNumber && touched.idNumber\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.idNumber &&\r\n          touched.idNumber &&\r\n          <span className=\"error__message\">{errors.idNumber}</span>\r\n          }\r\n        </div>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"email\"\r\n            placeholder={t(\"signup.email\")}\r\n            type=\"text\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.email &&\r\n            touched.email &&\r\n              <span className=\"error__message\">{errors.email}</span>\r\n          }\r\n        </div>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"password\"\r\n            placeholder={t(\"signup.password\")}\r\n            type=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.password && touched.password\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.password &&\r\n            touched.password &&\r\n              <span className=\"error__message\">{errors.password}</span>\r\n          }\r\n        </div>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"confirmPassword\"\r\n            placeholder={t(\"signup.confirmPass\")}\r\n            type=\"password\"\r\n            value={values.confirmPassword}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.confirmPassword && touched.confirmPassword\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.confirmPassword &&\r\n            touched.confirmPassword &&\r\n                <span className=\"error__message\">{errors.confirmPassword}</span>\r\n          }\r\n        </div>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"mobile\"\r\n            placeholder={t(\"signup.mobile\")}\r\n            type=\"text\"\r\n            value={values.mobile}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.mobile && touched.mobile\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.mobile &&\r\n            touched.mobile &&\r\n                <span className=\"error__message\">{errors.mobile}</span>\r\n          }\r\n        </div>\r\n        <button\r\n          className=\"btn submit\"\r\n          type=\"submit\"\r\n          disabled={!dirty}\r\n        >\r\n          {t(\"signup.buttonTitle\")}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSignUpForm.propTypes = {\r\n  values: PropTypes.object,\r\n  touched: PropTypes.object,\r\n  errors: PropTypes.object,\r\n  handleSubmit: PropTypes.func,\r\n  handleChange: PropTypes.func,\r\n  handleBlur: PropTypes.func,\r\n  dirty: PropTypes.bool,\r\n};\r\n\r\nexport default SignUpForm;\r\n","import SignUpForm from \"./SignUpForm\";\r\nimport {withFormik} from \"formik/dist/index\";\r\nimport swal from 'sweetalert'\r\nimport {string, number, object, ref, addMethod} from \"yup\";\r\nimport axios from 'axios';\r\nimport \"../auth.css\";\r\n\r\n//addMethod(string, \"equalTo\", equalTo);\r\n\r\nconst SignUpLogicForm = withFormik({\r\n  mapPropsToValues: () => ({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    mobile: \"\",\r\n    idNumber: '',\r\n  }),\r\n  // validationSchema:  (props => object().shape({\r\n  //   name: string().required(props.t(\"errorMessage.errorname\")),\r\n  //   email: string().email().required(props.t(\"errorMessage.errorEmail\")),\r\n  //   password: string().min(6, props.t(\"errorMessage.errorPassword\")),\r\n  //   confirmPassword: string().equalTo(ref(\"password\"), props.t(\"errorMessage.errorConfirmPassword\")),\r\n  //   mobile: number().integer(props.t(\"errorMessage.errorMobile\")),\r\n  //   idNumber: number().required(props.t(\"errorMessage.errorIdNumber\")),\r\n  // })),\r\n  handleSubmit: async (values, { props, setSubmitting }) => {\r\n    \r\n      axios({\r\n        method: 'post',\r\n        url: '/api/v1/users/register',\r\n        data: {\r\n          email: values.email,\r\n          idNumber: values.idNumber,\r\n          mobile: values.mobile,\r\n          name: values.name,\r\n          password: values.password,\r\n          using2FA: false\r\n        },\r\n      }).then(() => \r\n      // FIXME: do not use reload! \r\n      swal(props.t('signup.done'), props.t('signup.plsCheckLink'), \"success\").then(() => window.location.reload())\r\n      ).catch(error => { props.toggleErrorModal(error.message);\r\n      })\r\n    setSubmitting(false);\r\n  },\r\n})(SignUpForm);\r\n\r\nexport default SignUpLogicForm;","import React from \"react\";\r\nimport SignUpLogicForm from \"./SignUpLogicForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../Modal/ErrorModal\";\r\nimport Arrow from \"../../../assets/icons/arrow.svg\";\r\nimport {translate} from \"react-i18next\";\r\n\r\nconst SignUp = (props) => (\r\n  <div className=\"signup auth__wrapper\">\r\n    <div className=\"signup__header auth__header\">\r\n      <h3 className=\"title\">{props.t(\"signup.title\")}</h3>\r\n      <div\r\n        className=\"link__back\"\r\n        onClick={() => props.changeScreenAuth(true, false, false)}>\r\n        <img src={Arrow} className=\"link__arrow\" alt=\"back\" />\r\n        <span className=\"link\">{props.t(\"signup.back\")}</span>\r\n      </div>\r\n    </div>\r\n    <SignUpLogicForm\r\n      toggleErrorModal={props.toggleErrorModal}\r\n      t={props.t}\r\n      history={props.history}\r\n    />\r\n    <Modal />\r\n  </div>\r\n);\r\n\r\nSignUp.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default translate(\"common\")(SignUp)\r\n","import React from \"react\";\r\nimport ModalContext from \"../../../context/ModalContext\";\r\nimport SignUp from \"../../../components/Auth/SignUp/SignUp\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SignUpLogic = (props) => (\r\n  <ModalContext.Consumer>\r\n    { value => (\r\n      <SignUp\r\n        toggleErrorModal={value.toggleErrorModal}\r\n        changeScreenAuth={props.changeScreenAuth}\r\n        history={props.history}\r\n      />\r\n    )}\r\n  </ModalContext.Consumer>\r\n);\r\n\r\nSignUp.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n};\r\n\r\nexport default SignUpLogic;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass ForgotForm extends Component {\r\n  render() {\r\n    const {\r\n      values,\r\n      touched,\r\n      errors,\r\n      handleSubmit,\r\n      handleChange,\r\n      handleBlur,\r\n      dirty,\r\n      t\r\n    } = this.props;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form__field\">\r\n          <input\r\n            name=\"email\"\r\n            placeholder={t(\"forgot.email\")}\r\n            type=\"text\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={\r\n              errors.email && touched.email\r\n                ? \"form__input error\"\r\n                : \"form__input\"\r\n            }\r\n          />\r\n          {errors.email &&\r\n            touched.email &&\r\n              <span className=\"error__message\">{errors.email}</span>\r\n          }\r\n        </div>\r\n        <button\r\n          className=\"btn submit\"\r\n          type=\"submit\"\r\n          disabled={!dirty}>\r\n          {t(\"forgot.btnTitle\")}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForgotForm.propTypes = {\r\n  values: PropTypes.object,\r\n  touched: PropTypes.object,\r\n  errors: PropTypes.object,\r\n  handleSubmit: PropTypes.func,\r\n  handleChange: PropTypes.func,\r\n  handleBlur: PropTypes.func,\r\n  dirty: PropTypes.bool,\r\n};\r\n\r\nexport default ForgotForm;\r\n","import { withFormik } from \"formik/dist/index\";\r\nimport { string, object } from \"yup\";\r\nimport axios from 'axios';\r\n\r\nimport ForgotForm from \"./ForgotForm\"\r\n\r\nconst ForgotLogicForm = withFormik({\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n  }),\r\n  validationSchema: object().shape({\r\n    email: string().email().required(\"Email is required\"),\r\n  }),\r\n  handleSubmit: async (values, { props, setSubmitting }) => {\r\n    axios({\r\n      method: 'get',\r\n      url: '/api/v1/passwordReset',\r\n      data: values.email,\r\n    }).then( props.changeSendStatus()\r\n    ).catch(error => { props.toggleErrorModal(props.t(\"errorMessage.errorForgot\"));\r\n    })\r\n    setSubmitting(false);\r\n  },\r\n})(ForgotForm);\r\n\r\nexport default ForgotLogicForm;","import React, {Fragment, Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../../Modal/ErrorModal\";\r\nimport Arrow from \"../../../assets/icons/arrow.svg\";\r\nimport ForgotLogicForm from \"./ForgotLogicForm\";\r\nimport {translate} from \"react-i18next\";\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    sendSuccess: false\r\n  };\r\n\r\n  changeSendStatus = () => {\r\n    this.setState({sendSuccess: true})\r\n  };\r\n\r\n  render() {\r\n    const { sendSuccess } = this.state;\r\n    const { changeScreenAuth, toggleErrorModal, t } = this.props;\r\n    return (\r\n      <div className=\"forgot auth__wrapper\">\r\n        <div className=\"forgot__header auth__header\">\r\n          <h3 className=\"title\">{t(\"forgot.title\")}</h3>\r\n          {!sendSuccess ?\r\n            <div\r\n              className=\"link__back\"\r\n              onClick={() => changeScreenAuth(true, false, false)}>\r\n              <img src={Arrow} className=\"link__arrow\" alt=\"back\" />\r\n              <span className=\"link\">{t(\"forgot.back\")}</span>\r\n            </div>\r\n            : null\r\n          }\r\n        </div>\r\n        {!sendSuccess ?\r\n          <ForgotLogicForm\r\n            toggleErrorModal={toggleErrorModal}\r\n            changeSendStatus={this.changeSendStatus}\r\n            t={t}\r\n          /> :\r\n          <Fragment>\r\n            <p\r\n              className=\"send__message\">\r\n              {t(\"forgot.message\")}\r\n            </p>\r\n            <button\r\n              onClick={() => changeScreenAuth(true, false, false)}\r\n              className=\"btn submit\">\r\n              {t(\"forgot.backToLogin\")}\r\n            </button>\r\n          </Fragment>\r\n        }\r\n        <Modal />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n  changeScreenAuth: PropTypes.func,\r\n};\r\n\r\nexport default translate(\"common\")(ForgotPassword)\r\n","import React from \"react\";\r\nimport ModalContext from \"../../../context/ModalContext\";\r\nimport PropTypes from \"prop-types\";\r\nimport ForgotPassword from \"../../../components/Auth/ForgotPassword/ForgotPassword\";\r\n\r\nconst ForgotPasswordLogic = (props) => (\r\n  <ModalContext.Consumer>\r\n    { value => (\r\n      <ForgotPassword\r\n        toggleErrorModal={value.toggleErrorModal}\r\n        changeScreenAuth={props.changeScreenAuth}\r\n      />\r\n    )}\r\n  </ModalContext.Consumer>\r\n);\r\n\r\nForgotPasswordLogic.propTypes = {\r\n  changeScreenAuth: PropTypes.func,\r\n};\r\n\r\nexport default ForgotPasswordLogic;","import React, { Component } from 'react';\r\nimport Login from \"../../containers/Auth/Login/LoginLogic\";\r\nimport SignUp from \"../../containers/Auth/SignUp/SignUpLogic\";\r\nimport ForgotPassword from \"../../containers/Auth/ForgotPassword/ForgotPassword\";\r\nimport \"./auth.css\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    login: true,\r\n    signup: false,\r\n    forgot: false\r\n  };\r\n\r\n  changeScreenAuth = (login, signup, forgot) => {\r\n    this.setState({login, signup, forgot})\r\n  };\r\n\r\n  render() {\r\n    const { login, signup, forgot } = this.state;\r\n    const { history } = this.props\r\n    return (\r\n      <div className=\"auth__content\">\r\n        {login ?\r\n          <Login\r\n            changeScreenAuth={this.changeScreenAuth}\r\n            history={history}\r\n          />\r\n        : null}\r\n        {signup ?\r\n          <SignUp\r\n            changeScreenAuth={this.changeScreenAuth}\r\n            history={history}\r\n          />\r\n        : null}\r\n        {forgot ?\r\n          <ForgotPassword\r\n            changeScreenAuth={this.changeScreenAuth}\r\n          />\r\n        : null}\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Auth;","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport ReactTable from 'react-table'\r\n\r\nimport Content from '../../components/Main/Content';\r\n\r\nclass List extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onFetch().then(res => {\r\n      this.setState({data: res.data})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const data = this.state.data\r\n\r\n    const columns = [{\r\n      Header: t(\"truck.arabicNameField\"),\r\n      accessor: 'arabicName' // String-based value accessors!\r\n    }, {\r\n      Header: t(\"truck.englishNameField\"),\r\n      accessor: 'englishName',\r\n    }, {\r\n      Header: t(\"truck.creationDateField\"),\r\n      accessor: 'createdAt',\r\n    }]\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Content title={this.props.t(\"truck.list-title\")}\r\n          addButtonTitle={this.props.t(\"truck.add-btn\")}\r\n          addLink=\"trucks/add\"\r\n        >\r\n          <ReactTable\r\n            data={data}\r\n            columns={columns}\r\n            showPageSizeOptions={false}\r\n            minRows={0}\r\n            filterable={true}\r\n            showPageJump={false}\r\n          />\r\n        </Content>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate(\"common\")(List)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Arrow from \"../../../assets/icons/next_arrow.svg\";\r\nimport './style.css'\r\n\r\nconst BackButton = props => (\r\n  <Link className=\"back-button\" to={props.link}>\r\n    <img className=\"back-button-icon\" src={Arrow} alt=\"back\"/>\r\n    <span className=\"link__text\">{props.title}</span>\r\n  </Link>\r\n);\r\n\r\nexport default BackButton","import React from 'react';\r\nimport { Field } from 'formik';\r\nimport './style.css';\r\n\r\nconst FieldWrapper = (props) => (\r\n    <div className=\"row\">\r\n        <div className=\"title\">\r\n            {props.title}\r\n        </div>\r\n        <Field className=\"field\" {...props}>\r\n            {props.children}\r\n        </Field>\r\n        {props.errors[props.name] && props.touched[props.name] ? (\r\n            <div className=\"field-error\">\r\n                {props.t(props.errors[props.name])}\r\n                </div>\r\n          ) : null}\r\n    </div>\r\n)\r\n\r\nexport default FieldWrapper;","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Button from '../../app/components/button'\r\nimport BackButton from \"../../app/components/button/back\"\r\nimport Content from '../../components/Main/Content';\r\nimport Field from '../../app/components/field'\r\n\r\nconst TruckSchema = Yup.object().shape({\r\n    arabicName: Yup.string()\r\n        .required('truck.missing-ar-name'),\r\n    englishName: Yup.string()\r\n        .required('truck.missing-en-name')\r\n});\r\n\r\nconst TruckForm = (props) => (\r\n    <Formik\r\n        initialValues={{\r\n            arabicName: '',\r\n            englishName: ''\r\n        }}\r\n        validationSchema={TruckSchema}\r\n        onSubmit={values => {\r\n            props.onSubmit(values)\r\n        }}\r\n    >\r\n        {({ errors, touched }) => (\r\n            <Form>\r\n                <Field name=\"arabicName\"\r\n                    title={props.t(\"truck.arabicNameField\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n\r\n                <Field name=\"englishName\"\r\n                    title={props.t(\"truck.englishNameField\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Button label={props.t(\"truck.add-submit-btn\")} />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n);\r\n\r\nconst AddForm = (props) => (\r\n    <Content title={props.t(\"truck.add-form-title\")}>\r\n        <BackButton title={props.t(\"truck.back-btn\")} link=\"/trucks\" />\r\n        <TruckForm {...props} />\r\n    </Content>\r\n)\r\n\r\nexport default translate(\"common\")(AddForm)","import axios from 'axios';\r\n\r\nconst TRUCKS_URL = \"/api/v1/trucks\"\r\n\r\nexport function getTrucks() {\r\n    return axios({\r\n        method: 'get',\r\n        url: TRUCKS_URL,\r\n      })\r\n}\r\n\r\nexport function add(truck) {\r\n    return axios.post(TRUCKS_URL, {\r\n            arabicName: truck.arabicName,\r\n            englishName: truck.englishName\r\n        }\r\n    )\r\n}\r\n\r\nexport function deleteTruck(id) {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${TRUCKS_URL}/${id}`\r\n    })\r\n}","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Main/Content';\r\nimport List from './list';\r\nimport AddForm from './add-form';\r\nimport * as api from './api';\r\n\r\nclass Container extends React.Component {\r\n\r\n    handleAddTruck = (truck) => {\r\n        api.add(truck)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.history.push('/trucks')\r\n                    toast.success(this.props.t(\"truck.truck-added\"))\r\n                } else {\r\n                    toast.error(this.props.t(\"truck.truck-submit-error\"))\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(this.props.t(\"truck.truck-submit-error\"))\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleFetchTrucks() {\r\n        return api.getTrucks()\r\n            .catch(error => toast.error(\"Unable to fetch the data\"))\r\n    }\r\n\r\n    handleDeleteTruck(truckId) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/trucks\" render={(props) => <List onFetch={this.handleFetchTrucks}/> } />\r\n                <Route exact path=\"/trucks/add\" render={(props) => <AddForm onSubmit={this.handleAddTruck}/>} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(Container)","export const NEW = \"NEW\";\r\nexport const APPROVED = \"APPROVED\";\r\nexport const CLIENT_APPROVED = \"CLIENT_APPROVED\";\r\n\r\nexport const ASSIGNED = \"ASSIGNED\"; \r\nexport const ARRIVAL_TO_PICKUP = \"ARRIVAL_TO_PICKUP\"\r\nexport const OUT_FOR_DELIVERY = \"OUT_FOR_DELIVERY\";\r\nexport const ARRIVE_AT_DESTINATION = \"ARRIVE_AT_DESTINATION\";\r\nexport const DELIVERED = \"DELIVERED\";\r\n\r\nexport const REJECTED = \"REJECTED\";\r\nexport const CLIENT_CANCELD = \"CLIENT_CANCELED\";\r\n\r\n","import { NEW, CLIENT_APPROVED, APPROVED, ASSIGNED, REJECTED, CLIENT_CANCELD\r\n, ARRIVAL_TO_PICKUP, OUT_FOR_DELIVERY, ARRIVE_AT_DESTINATION, DELIVERED } from './request-status'\r\n\r\nexport function getRequestStatus(status) {\r\n    switch (status) {\r\n        case NEW:\r\n            return \"request.request-status-new\"\r\n        case APPROVED:\r\n            return \"request.request-status-approved\"\r\n        case CLIENT_APPROVED:\r\n            return \"request.request-status-client-approved\"\r\n        case ASSIGNED:\r\n            return \"request.request-status-assigned\"\r\n        case REJECTED:\r\n            return \"request.request-status-rejected\"\r\n        case CLIENT_CANCELD:\r\n            return \"request.request-status-client-canceled\"\r\n        case ARRIVAL_TO_PICKUP:\r\n            return \"request.request-status-pickup\"\r\n        case OUT_FOR_DELIVERY:\r\n            return \"request.request-status-out4dlv\"\r\n        case ARRIVE_AT_DESTINATION:\r\n            return \"request.request-status-arrive-at-dest\"\r\n        case DELIVERED:\r\n            return \"request.request-status-client-deliverd\"\r\n        default:\r\n            return \"\"\r\n    }\r\n}","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport ReactTable from 'react-table';\r\nimport Content from '../../components/Main/Content';\r\nimport RightArrow from '../../assets/icons/right-arrow.svg';\r\nimport { getRequestStatus } from './utils'\r\n\r\nimport './table.css'\r\n\r\nclass List extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onFetch().then(res => {\r\n      if (res && res.status === 200) {\r\n        this.setState({ data: res.data.content })\r\n      }\r\n    })\r\n  }\r\n\r\n  renderActionButtons = (row) => {\r\n    // const status = row.requestStatus;\r\n    const t = this.props.t\r\n    // const { authUser } = this.props\r\n\r\n    // const showAddForCorp = authUser ? authUser.roles.filter(f => f.name === 'ROLE_CORPORATE') : null\r\n    // if (showAddForCorp && showAddForCorp.length > 0) {\r\n    //   return <ActionButton title={t(\"request.view-request\")} link={`/requests/view/${row.id}`} type=\"info\" />\r\n    // } else if (authUser.roles.filter(f => f.name === 'ROLE_ADMIN').length > 0) {\r\n    //   if (status === NEW) {\r\n    //     return (\r\n    //       <div>\r\n    //         <ActionButton title={t(\"request.approve-action-btn\")} link={`/requests/approve/${row.id}`} type=\"info\" />\r\n    //         <ActionButton title={t(\"request.reject-action-btn\")} link={`/requests/reject/${row.id}`} type=\"danger\" />\r\n    //         <ActionButton title={t(\"request.view-request\")} link={`/requests/view/${row.id}`} type=\"info\" />\r\n    //       </div>\r\n    //     )\r\n    //   } else if (status === CLIENT_APPROVED || status === APPROVED) {\r\n    //     return (\r\n    //       <div>\r\n    //         <ActionButton title={t(\"request.assign-action-btn\")} link={`/requests/assign/${row.id}`} type=\"warn\" />\r\n    //         <ActionButton title={t(\"request.view-request\")} link={`/requests/view/${row.id}`} type=\"info\" />\r\n    //       </div>)\r\n    //   } else {\r\n    //     return <div>\r\n    //       <ActionButton title={t(\"request.view-request\")} link={`/requests/view/${row.id}`} type=\"info\" />\r\n    //     </div>\r\n    //   }\r\n    // } {\r\n    //   return null\r\n    // }\r\n    return <span className='action-button default-btn'>{t(getRequestStatus(row.requestStatus))}</span>\r\n  }\r\n\r\n  formatDate = (date) => {\r\n    const locale = this.props.lng === 'en' ? 'en-SA' : 'ar-SA'\r\n    return new Date(date).toLocaleDateString(locale, {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { t, authUser } = this.props;\r\n    const data = this.state.data\r\n    const isAdmin = authUser && authUser.roles.filter(f => f.name === 'ROLE_ADMIN').length > 0\r\n    const isArabic = this.props.lng !== 'en'\r\n    const columns = [{\r\n      Header: t(\"request.id\"),\r\n      accessor: 'id', // String-based value accessors!\r\n      show: false\r\n    }, {\r\n      Header: t(\"request.corporate\"),\r\n      accessor: isArabic ? 'corporate.arabicName' : 'corporate.englishName', // String-based value accessors!\r\n      show: isAdmin\r\n    },\r\n    {\r\n      Header: t(\"request.awbNumber\"),\r\n      accessor: 'awbNumber', // String-based value accessors!\r\n      // minWidth: 20,\r\n    }, {\r\n      Header: t(\"request.origin\"),\r\n      accessor: 'origin' // String-based value accessors!\r\n    }, {\r\n      header: '',\r\n      Cell: props => <span className='inline-image'><img src={RightArrow} width=\"45px\"></img></span>,\r\n    }, {\r\n      Header: t(\"request.destination\"),\r\n      accessor: 'destination' // String-based value accessors!\r\n      // }, {\r\n      //   Header: t(\"request.status\"),\r\n      //   accessor: 'requestStatus',\r\n      //   Cell: props => <span>{t(this.getRequestStatus(props.value))}</span>\r\n      // }, {\r\n    }, {\r\n      Header: t(\"request.createdAt\"),\r\n      accessor: 'createAt',\r\n      Cell: props => this.formatDate(props.value) // String-based value accessors!\r\n    }, {\r\n      id: \"actions\",\r\n      Header: t(\"request.status\"),\r\n      accessor: d => d,\r\n      Cell: (d) => (\r\n        this.renderActionButtons(d.value)\r\n      ),\r\n      filterable: false\r\n    }]\r\n\r\n    const showAddForCorp = authUser ? authUser.roles.filter(f => f.name === 'ROLE_CORPORATE') : null\r\n    return (\r\n      <React.Fragment>\r\n        <Content\r\n          title={this.props.t(\"request.list-title\")}\r\n          addButtonTitle={authUser && showAddForCorp.length > 0 ? this.props.t(\"addItem.submit\") : null}\r\n          addLink='/requests/add'\r\n        >\r\n          <ReactTable\r\n            data={data}\r\n            columns={columns}\r\n            showPageSizeOptions={false}\r\n            minRows={1}\r\n            filterable={false}\r\n            showPageJump={false}\r\n            getTdProps={(state, rowInfo, column, instance) => {\r\n              return {\r\n                onClick: (e, handleOriginal) => {\r\n                  console.log(column)\r\n                  this.props.history.push(`/requests/view/${rowInfo.original.id}`)\r\n                  if (handleOriginal) {\r\n                    handleOriginal()\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </Content>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate(\"common\")(List)","import axios from 'axios';\r\n\r\nconst REQUESTS_URL = \"/api/v1/requests\"\r\n\r\nexport function getRequestDetails(id) {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${REQUESTS_URL}/${id}`\r\n    })\r\n}\r\n\r\n// TODO: add SSP\r\nexport function getRequests() {\r\n    return axios({\r\n        method: 'get',\r\n        url: REQUESTS_URL,\r\n      })\r\n}\r\n\r\nexport function approve(id, price) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/approve/${id}`,\r\n        data: {\r\n            price: price\r\n        }\r\n    })\r\n}\r\n\r\nexport function reject(id, reason) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/reject/${id}`,\r\n        data: {\r\n            reason: reason\r\n        }\r\n    })\r\n}\r\n\r\nexport function assign(requestId, driversIds) {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${REQUESTS_URL}/assign`,\r\n        data: {\r\n            \"requestId\": requestId,\r\n            \"drivers\": driversIds\r\n        }\r\n    })\r\n}\r\n\r\nexport function addRequest(request) {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${REQUESTS_URL}`,\r\n        data: request\r\n    })\r\n}\r\n\r\nexport function getWaybillDetails(requestId) {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${REQUESTS_URL}/waybill/${requestId}`,\r\n      })\r\n}\r\n\r\nexport function getAssignedDrivers(requestId) {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${REQUESTS_URL}/drivers/${requestId}`\r\n    })\r\n}\r\n\r\nexport function pickup(driverRequestId) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/driver/${driverRequestId}/pickup`\r\n    })\r\n}\r\n\r\nexport function outForDelivery(driverRequestId) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/driver/${driverRequestId}/out`\r\n    })\r\n}\r\n\r\nexport function arriveAtDestination(driverRequestId) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/driver/${driverRequestId}/arrival`\r\n    })\r\n}\r\n\r\nexport function complete(driverRequestId) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/driver/${driverRequestId}/complete`\r\n    })\r\n}\r\n\r\nexport function cancel(id) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${REQUESTS_URL}/cancel/${id}`\r\n    })\r\n}","import axios from 'axios';\r\n\r\nconst DRIVERS_URL = \"/api/v1/drivers\"\r\n\r\nexport function getDriverDetails(id) {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${DRIVERS_URL}/${id}`\r\n    })\r\n}\r\n\r\n// TODO: add SSP\r\nexport function getDrivers() {\r\n    return axios({\r\n        method: 'get',\r\n        url: DRIVERS_URL,\r\n      })\r\n}\r\n\r\nexport function getDriversByTruck(truckId) {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${DRIVERS_URL}/truck/${truckId}`,\r\n      })\r\n}\r\n","import React from \"react\"\r\nimport GoogleMapLoader from \"react-google-maps-loader\"\r\nimport GooglePlacesSuggest from \"react-google-places-suggest\"\r\n \r\nconst MY_API_KEY = \"AIzaSyDJXZPLm5toTVcdqA6_t7nQkxtgUIP77sY\" \r\n \r\nexport default class GoogleSuggest extends React.Component {\r\n    state = {\r\n        search: \"\",\r\n        value: \"\",\r\n        name: this.props.field.name,\r\n        address: this.props.value || \"\"\r\n    }\r\n \r\n    handleInputChange = e => {\r\n        this.setState({search: e.target.value, value: e.target.value})\r\n    }\r\n \r\n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\r\n        // console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\r\n        this.setState({search: \"\", value: geocodedPrediction.formatted_address})\r\n        //this.props.value(geocodedPrediction.formatted_address)\r\n        const { name } = this.state\r\n        this.setState(() => {\r\n            this.props.form.setFieldValue(name, geocodedPrediction.formatted_address);\r\n\r\n            this.props.form.setFieldValue(name === 'origin'? 'originLat': 'destinationLat', geocodedPrediction.geometry.location.lat());\r\n            this.props.form.setFieldValue(name === 'origin'? 'originLong': 'destinationLong', geocodedPrediction.geometry.location.lng());\r\n        })\r\n    }\r\n    \r\n    handleNoResult = () => {\r\n        console.log('No results for ', this.state.search)\r\n    }\r\n \r\n    handleStatusUpdate = (status) => {\r\n        //console.log(status)\r\n    }\r\n \r\n    render() {\r\n        const {search, value} = this.state\r\n        return (\r\n            <GoogleMapLoader\r\n                params={{\r\n                    key: MY_API_KEY,\r\n                    libraries: \"places,geocode\",\r\n                }}\r\n                render={googleMaps =>\r\n                    googleMaps && (\r\n                        <GooglePlacesSuggest\r\n                            googleMaps={googleMaps}\r\n                            autocompletionRequest={{\r\n                                input: search,\r\n                                // Optional options\r\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\r\n                            }}\r\n                            // Optional props\r\n                            onNoResult={this.handleNoResult}\r\n                            onSelectSuggest={this.handleSelectSuggest}\r\n                            onStatusUpdate={this.handleStatusUpdate}\r\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\r\n                            customRender={prediction => (\r\n                                <div className=\"customWrapper\">\r\n                                    {prediction\r\n                                        ? prediction.description\r\n                                        : \"No results\"}\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                className='field'\r\n                                value={value}\r\n                                placeholder={this.props.t('request.locationSearch')}\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </GooglePlacesSuggest>\r\n                    )\r\n                }\r\n            />\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Button from '../../app/components/button'\r\nimport Field from '../../app/components/field'\r\nimport BackButton from \"../../app/components/button/back\"\r\nimport Content from '../../components/Main/Content';\r\nimport './request.css'\r\nimport GoogleSuggest from './googleSearch';\r\n\r\nconst AddFormSchema = Yup.object().shape({\r\n    weight: Yup.number()\r\n        .required('request.missing-weight')\r\n        .min(0, \"request.error-min-weight\")\r\n        .max(100000, \"request.error-max-weight\"),\r\n    origin: Yup.string()\r\n        .required('request.missing-origin'),\r\n    destination: Yup.string()\r\n        .required('request.missing-destination'),\r\n    description: Yup.string()\r\n        .required('request.missing-description'),\r\n    truckId: Yup.number()\r\n        .required('request.missing-type'),\r\n    numberOfTrucks: Yup.number()\r\n        .required('request.missing-numberOfTrucks')\r\n        .min(1, \"request.error-min-trucks\")\r\n        .max(50, \"request.error-max-trucks\"),\r\n});\r\n\r\nconst AddForm = (props) => (\r\n    <Formik\r\n        initialValues={{ \r\n            origin: '',\r\n            destination: '',\r\n            weight: '',\r\n            description: '',\r\n            truckId: '',\r\n            numberOfTrucks: '',\r\n            originLat: '',\r\n            originLong: '',\r\n            destinationLat: '',\r\n            destinationLong: ''\r\n         }}\r\n        validationSchema={AddFormSchema}\r\n        onSubmit={values => {\r\n            props.onSubmit(values)\r\n        }}\r\n    >\r\n        {({ errors, touched }) => (\r\n            <Form>\r\n                <Field name=\"origin\"\r\n                    title={props.t(\"request.origin\")}\r\n                    component={GoogleSuggest}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"originLat\"\r\n                    title={props.t(\"request.originLat\")}\r\n                    disabled\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"originLong\"\r\n                    title={props.t(\"request.originLong\")}\r\n                    disabled\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"destination\"\r\n                    component={GoogleSuggest}\r\n                    title={props.t(\"request.destination\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"destinationLat\"\r\n                    title={props.t(\"request.destinationLat\")}\r\n                    disabled\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"destinationLong\"\r\n                    title={props.t(\"request.destinationLong\")}\r\n                    disabled\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"weight\"\r\n                    title={props.t(\"request.weight\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field name=\"description\"\r\n                    title={props.t(\"request.description\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Field\r\n                    name=\"truckId\"\r\n                    title={props.t(\"request.truckId\")}\r\n                    component=\"select\" \r\n                    placeholder={props.t(\"request.missing-type\")}\r\n                    errors={errors} touched={touched} t={props.t}>\r\n                        <option value=''>{props.t(\"request.missing-type\")}</option>\r\n                        {props.truckTypes.map(tt =>\r\n                             <option key={tt.value} value={tt.value}>{props.i18n.language === 'ar'? tt.labelAr: tt.labelEn}</option>\r\n                            )}\r\n\r\n                </Field>\r\n                <Field name=\"numberOfTrucks\"\r\n                    title={props.t(\"request.numberOfTrucks\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n                <Button label={props.t(\"addItem.submit\")} />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n)\r\n\r\nclass RequestComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            request: {},\r\n        }\r\n    }\r\n\r\n    componentWillMount(){       \r\n        this.props.onGetTrucks().then(res => {\r\n            const trucks = []\r\n            res.data.forEach(d => {\r\n                trucks.push({labelAr: d.arabicName, labelEn : d.englishName, value: d.id})\r\n            })\r\n            this.setState({ truckTypes: trucks })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { t } =  this.props\r\n        return (\r\n            <Content title={this.props.t(\"addItem.title\")}>\r\n                <BackButton title={t(\"request.back-btn\")} link=\"/requests\" />\r\n                {this.state.truckTypes && this.state.truckTypes.length > 0 ? <AddForm {...this.props} truckTypes={this.state.truckTypes} /> : null }\r\n            </Content>\r\n        )\r\n        }\r\n}\r\n\r\nexport default translate(\"common\")(RequestComponent);","import React from 'react';\r\nimport './style.css'\r\n\r\nconst Button = props => (\r\n  <button className={`button-link ${props.type}`} onClick={props.onClick}>\r\n    <span className=\"link__text\">{props.title}</span>\r\n  </button>\r\n);\r\n\r\nexport default Button","import React from 'react';\r\nimport './style.css'\r\n\r\nconst PrintButton = props => (\r\n  <button className=\"info print-button\" onClick={() => window.print()}>\r\n    <span className=\"link__text\">{props.title}</span>\r\n  </button>\r\n);\r\n\r\nexport default PrintButton","import React from \"react\";\r\nimport { customStyles } from \"../../style/styles\";\r\nimport Modal from 'react-modal';\r\nimport \"./Modal.css\";\r\nimport { translate } from \"react-i18next\";\r\n\r\nconst DefaultModal = (props) => {\r\n    return (\r\n        <Modal\r\n            isOpen={props.isModalOpen}\r\n            onRequestClose={props.closeModal}\r\n            appElement={document.getElementById('root')}\r\n            style={customStyles}\r\n            contentLabel=\"Modal\"\r\n            rtl\r\n        >\r\n            {props.rtl? <div className=\"rtl\">{props.content}</div> : props.content}\r\n            \r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default translate(\"common\")(DefaultModal);","import React from \"react\";\r\nimport  \"./Spinner.css\";\r\n\r\nconst Spinner = () => (\r\n  <div className=\"sk-circle\">\r\n    <div className=\"sk-circle1 sk-child\" />\r\n    <div className=\"sk-circle2 sk-child\" />\r\n    <div className=\"sk-circle3 sk-child\" />\r\n    <div className=\"sk-circle4 sk-child\" />\r\n    <div className=\"sk-circle5 sk-child\" />\r\n    <div className=\"sk-circle6 sk-child\" />\r\n    <div className=\"sk-circle7 sk-child\" />\r\n    <div className=\"sk-circle8 sk-child\" />\r\n    <div className=\"sk-circle9 sk-child\" />\r\n    <div className=\"sk-circle10 sk-child\" />\r\n    <div className=\"sk-circle11 sk-child\" />\r\n    <div className=\"sk-circle12 sk-child\" />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { toPrettyDate } from '../../app/utils/date'\r\nimport { getRequestStatus } from './utils';\r\n\r\n\r\nconst DetailsRow = (props) => {\r\n    return (\r\n        <div className=\"details-row\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DetailsField = ({ label, value }) => (\r\n    <div className=\"static-field\">\r\n        <div className=\"field-label\">{label}:&nbsp;</div>\r\n        <div className=\"field-value\">{value}</div>\r\n    </div>\r\n)\r\n\r\nconst details = (props) => {\r\n    const r = props.request\r\n    const t = props.t\r\n    const groups = [\r\n        {\r\n            label: 'request.shipmentInfo',\r\n            values: [\r\n                { label: \"request.awbNumber\", id: \"awbNumber\" },\r\n                { label: \"request.description\", id: \"description\" },\r\n                { label: \"request.weight\", id: \"weight\" },\r\n                { label: \"request.numberOfTrucks\", id: \"numberOfTrucks\" },\r\n                { label: \"request.origin\", id: \"origin\" },\r\n                { label: \"request.destination\", id: \"destination\" },\r\n                { label: \"request.status\", id: \"requestStatus\", isEnum: true },\r\n                { label: \"request.price-field-label\", id: \"price\" },\r\n                { label: \"request.arabicTruckName\", id: \"arabicTruckName\" },\r\n                { label: \"request.englishTruckName\", id: \"englishTruckName\" },\r\n                { label: \"request.createdAt\", id: \"createAt\", isDate: true }\r\n            ]\r\n        }\r\n    ]\r\n    return (\r\n        <div>\r\n            {\r\n                groups.map((g, i) => (\r\n                    <div key={i}>\r\n                        <h2 className='details-header'>{t(g.label)}</h2>\r\n                        <div className=\"details-container\">\r\n                            {\r\n                                g.values.map((f, j) => (\r\n                                    <DetailsRow key={j + \"-:)\"}>\r\n                                        {\r\n                                            f.isDate ?\r\n                                                <DetailsField label={t(f.label)} value={toPrettyDate(r[f.id])} />\r\n                                                :\r\n                                                f.isEnum ?\r\n                                                    <DetailsField label={t(f.label)} value={t(getRequestStatus(r[f.id]))} />\r\n                                                    :\r\n                                                    <DetailsField label={t(f.label)} value={r[f.id]} />\r\n                                        }\r\n                                    </DetailsRow>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <div>\r\n                <h2 className='details-header'>{t('request.customerInfo')}</h2>\r\n                <div className=\"details-container\">\r\n                    <DetailsRow>\r\n                        <DetailsField label={t('request.customerFullName')} value={`${r.user.firstName} ${r.user.lastName}`} />\r\n                    </DetailsRow>\r\n                    <DetailsRow>\r\n                        <DetailsField label={t('request.customerMobile')} value={r.user.mobile} />\r\n                    </DetailsRow>\r\n                    <DetailsRow>\r\n                        <DetailsField label={t('request.corporate-en-name')} value={t(r.corporate.englishName)} />\r\n                    </DetailsRow>\r\n                    <DetailsRow>\r\n                        <DetailsField label={t('request.corporate-ar-name')} value={t(r.corporate.arabicName)} />\r\n                    </DetailsRow>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default translate(\"common\")(details)\r\n","\r\n\r\nconst toLocalDate = (date) => {\r\n    return date.toLocaleDateString(\"enSA\", {  year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric' })\r\n}\r\n\r\nexport const toPrettyDate = (date) => {\r\n    if (date) {\r\n        return toLocalDate(new Date(Date.parse(date)))\r\n    }\r\n    return null\r\n}","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport Select from 'react-select';\r\nimport ActionButton from '../../app/components/button/button';\r\n\r\nimport Button from '../../app/components/button'\r\nimport ReactTable from 'react-table';\r\nimport Spinner from '../../app/components/spinner';\r\n\r\nclass AssignDriverForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            options: [],\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.onGetDrivers().then(res => {\r\n            const drivers = []\r\n            res.data.content.forEach((d, i) => {\r\n                console.log(d)\r\n                drivers.push({ \r\n                    index: i, \r\n                    value: d.driverId,\r\n                    idNumber: d.idNumber,\r\n                    label: `${d.firstName} ${d.lastName} (${d.idNumber}) (${d.mobile})` ,\r\n                    fullName: `${d.firstName} ${d.lastName}`,\r\n                    mobile: d.mobile\r\n                })\r\n            })\r\n            this.setState({\r\n                options: drivers,\r\n                loading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const requestId = this.props.match.params.requestId\r\n        const drivers = this.state.options.filter(d => d.selected).map(d => d.value)\r\n        if (drivers.length === 0) {\r\n            this.setState({ error: this.props.t(\"request.missing-driver\") })\r\n        } else {\r\n            this.props.onSubmit(requestId, drivers)\r\n        }\r\n    }\r\n\r\n    onChange = (values) => {\r\n        const drivers = this.state.options\r\n        drivers[values.index] = { ...drivers[values.index], selected: true }\r\n        this.setState({ options: drivers })\r\n    }\r\n\r\n    deleteDriver = (rowIndex, values) => {\r\n        const drivers = this.state.options\r\n        drivers[values.index] = { ...drivers[values.index], selected: false }\r\n        this.setState({ \r\n            options: drivers\r\n        })\r\n    }\r\n\r\n    getOptions = () => {\r\n        return this.state.options.filter(driver => !driver.selected)\r\n    }\r\n\r\n    renderSelect = () => {\r\n        return (\r\n            <Select\r\n                placeholder={this.props.t(\"request.assign-ph\")}\r\n                options={this.getOptions()}\r\n                onChange={this.onChange}\r\n            />\r\n        )\r\n    }\r\n\r\n    getSelectedDrivers = () => {\r\n        return this.state.options.filter(driver => driver.selected)\r\n    }\r\n\r\n    render() {\r\n        const loading = this.state.loading\r\n        const { t } = this.props;\r\n        const data = this.getSelectedDrivers()\r\n        const columns = [\r\n            {\r\n                Header: t(\"driver.fullName\"),\r\n                accessor: 'fullName' // String-based value accessors!\r\n            },\r\n            {\r\n                Header: t(\"driver.idNumber\"),\r\n                accessor: 'idNumber', // String-based value accessors!\r\n            },\r\n            {\r\n                Header: t(\"driver.mobile\"),\r\n                accessor: 'mobile' // String-based value accessors!\r\n            }, {\r\n                id: \"actions\",\r\n                Header: t(\"request.actions\"),\r\n                accessor: d => d,\r\n                Cell: (d) => (\r\n                    <ActionButton onClick={() => this.deleteDriver(d.index, d.value)} title={t('delete')} type=\"danger\"/>\r\n                )\r\n            }\r\n        ]\r\n        if (loading) {\r\n            return <Spinner />\r\n        } else {\r\n            return (\r\n                <div className=\"large-modal assign-modal\">\r\n                    <h2 className='details-header'>{this.props.t('request.assign-form-title')}</h2>\r\n                    <br />\r\n                    {this.renderSelect()}\r\n                    {<div style={{ color: 'red' }}>{this.state.error}</div>}\r\n                    {\r\n                        data.length > 0?\r\n                            <ReactTable\r\n                            data={data}\r\n                            columns={columns}\r\n                            showPageSizeOptions={false}\r\n                            minRows={0}\r\n                            showPageJump={false}\r\n                            showPagination={false}\r\n                            />\r\n                        : null\r\n                    }\r\n                    \r\n                    <br />\r\n                    <Button label={this.props.t(\"request.assign-btn\")} onClick={this.onSubmit} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(AssignDriverForm)","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Button from '../../app/components/button'\r\nimport Content from '../../components/Main/Content';\r\nimport Field from '../../app/components/field'\r\n\r\nconst ApproveFormSchema = Yup.object().shape({\r\n    price: Yup.number()\r\n        .required('request.missing-price')\r\n        .min(0, \"request.error-min-price\")\r\n        .max(100000, \"request.error-max-price\")\r\n});\r\n\r\nconst ApproveForm = (props) => (\r\n    <Formik\r\n        initialValues={{ price: '' }}\r\n        validationSchema={ApproveFormSchema}\r\n        onSubmit={values => { props.onSubmit(props.requestId, values.price) }}\r\n    >\r\n        {({ errors, touched }) => (\r\n            <Form>\r\n                <Field name=\"price\"\r\n                    title={props.t(\"request.price-field-label\")}\r\n                    errors={errors} touched={touched} t={props.t} />\r\n\r\n                <Button label={props.t(\"request.approve-btn\")} />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n)\r\n\r\nclass ApproveRequestForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            request: {}\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const requestId = this.props.requestId\r\n        return (\r\n            <div className='large-modal'>\r\n                <h2>{this.props.t(\"request.approve-form-title\")} </h2>\r\n                <ApproveForm {...this.props} requestId={requestId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(ApproveRequestForm)","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Button from '../../app/components/button'\r\nimport Field from '../../app/components/field';\r\n\r\nconst RejectFormSchema = Yup.object().shape({\r\n    reason: Yup.string()\r\n        .required('request.missing-reason')\r\n        .max(1024, \"The reason should be less than 1024 characters\")\r\n});\r\n\r\nconst RejectForm = (props) => (\r\n    <Formik\r\n        initialValues={{ reason: '' }}\r\n        validationSchema={RejectFormSchema}\r\n        onSubmit={values => { props.onSubmit(props.requestId, values.reason) }}\r\n    >\r\n        {({ errors, touched }) => (\r\n            <Form>\r\n                <Field name=\"reason\"\r\n                    title={props.t(\"request.reason-label\")}\r\n                    errors={errors} touched={touched} t={props.t}/>\r\n\r\n                <Button label={props.t(\"request.reject-btn\")} />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n)\r\n\r\nclass RejectRequestForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            request: {}\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const requestId = this.props.requestId\r\n        return (\r\n            <div className=\"large-modal\">\r\n                <h2>{this.props.t(\"request.reject-form-title\")}</h2>\r\n                <RejectForm {...this.props} requestId={requestId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(RejectRequestForm)","import React from 'react'\r\nimport { translate } from \"react-i18next\";\r\nimport ReactTable from 'react-table';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\n\r\nimport Spinner from '../../app/components/spinner';\r\nimport ActionButton from '../../app/components/button/button';\r\nimport { getRequestStatus } from './utils'\r\nimport { ASSIGNED, ARRIVAL_TO_PICKUP, OUT_FOR_DELIVERY, ARRIVE_AT_DESTINATION } from './request-status';\r\n\r\nclass AssignedDrivers extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            drivers: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.update()\r\n    }\r\n\r\n    update = () => {\r\n        this.props.onGetDrivers().then(res => {\r\n            this.setState({\r\n                loading: false,\r\n                drivers: res.data\r\n            })\r\n        })\r\n    }\r\n\r\n    confirmAction = (msg, callback) => {\r\n        const t = this.props.t\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                  <div className='confirm-alert'>\r\n                    <h4>{msg}</h4>\r\n                    <button onClick={onClose}>{t('request.cancel')}</button>\r\n                    <button\r\n                      onClick={() => {\r\n                        callback();\r\n                        onClose();\r\n                      }}\r\n                    >\r\n                        {t('request.confirm')}\r\n                    </button>\r\n                  </div>\r\n                );\r\n              }\r\n        });\r\n    }\r\n\r\n    renderActions = (value) => {\r\n        const t = this.props.t\r\n        if (value.status === ASSIGNED)\r\n            return <ActionButton\r\n                        onClick={() => \r\n                            this.confirmAction(\r\n                                `${t('request.change-status-confirm-msg')} ${t('request.request-status-pickup')}`,\r\n                                () => this.props.onPickup(value.driverRequestId, this.update)\r\n                            )\r\n                        }\r\n                        title={t('request.request-status-pickup')} type=\"info\"/>\r\n        else if (value.status === ARRIVAL_TO_PICKUP)\r\n            return <ActionButton\r\n                        onClick={() => \r\n                            this.confirmAction(\r\n                                `${t('request.change-status-confirm-msg')} ${t('request.request-status-out4dlv')}`,\r\n                                () => this.props.onOutForDelivery(value.driverRequestId, this.update)\r\n                            )\r\n                        }\r\n                        title={t('request.request-status-out4dlv')} type=\"info\"/>\r\n        else if (value.status === OUT_FOR_DELIVERY)\r\n            return <ActionButton\r\n                        onClick={() =>\r\n                            this.confirmAction(\r\n                                `${t('request.change-status-confirm-msg')} ${t('request.request-status-arrive-at-dest')}`,\r\n                                () => this.props.onArriveAtDestination(value.driverRequestId, this.update)\r\n                            )\r\n                        }\r\n                        title={t('request.request-status-arrive-at-dest')} type=\"info\"/>\r\n        else if (value.status === ARRIVE_AT_DESTINATION)\r\n            return <ActionButton\r\n                        onClick={() =>\r\n                            this.confirmAction(\r\n                                `${t('request.change-status-confirm-msg')} ${t('request.request-status-client-deliverd')}`,\r\n                                () => this.props.onComplete(value.driverRequestId, this.update)\r\n                            )\r\n                        }\r\n                        title={t('request.request-status-client-deliverd')} type=\"info\"/>\r\n        return null\r\n    }\r\n\r\n    render() {\r\n        const loading = this.state.loading\r\n        const { t } = this.props;\r\n        const data = this.state.drivers\r\n        const columns = [\r\n            {\r\n                id: 'fullName',\r\n                Header: t(\"driver.fullName\"),\r\n                accessor: d => d,\r\n                Cell: (d) => (`${d.value.firstName} ${d.value.lastName}`)\r\n            },\r\n            {\r\n                Header: t(\"driver.idNumber\"),\r\n                accessor: 'idNumber', // String-based value accessors!\r\n            },\r\n            {\r\n                Header: t(\"driver.mobile\"),\r\n                accessor: 'mobile' // String-based value accessors!\r\n            },\r\n            {\r\n                id: \"status\",\r\n                Header: t(\"request.status\"),\r\n                accessor: d => d,\r\n                Cell: (d) => (\r\n                    t(getRequestStatus(d.value.status))\r\n                ),\r\n            }\r\n            , {\r\n                id: \"actions\",\r\n                Header: t(\"request.actions\"),\r\n                accessor: d => d,\r\n                Cell: (d) => (\r\n                    this.renderActions(d.value)\r\n                )\r\n            }\r\n        ]\r\n        if (loading) {\r\n            return <Spinner />\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h2 className='details-header'>{this.props.t('request.assignedDrivers')}</h2>\r\n                    {\r\n                        data.length > 0 ?\r\n                            <ReactTable\r\n                                data={data}\r\n                                columns={columns}\r\n                                showPageSizeOptions={false}\r\n                                minRows={0}\r\n                                sortable={false}\r\n                                defaultSorted={[{\r\n                                    id: \"idNumber\",\r\n                                    desc: true\r\n                                  }]\r\n                                }\r\n                                showPageJump={false}\r\n                                showPagination={false}\r\n                            />\r\n                            : null\r\n                    }\r\n\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(AssignedDrivers)","import React from 'react';\r\nimport Barcode from 'react-barcode';\r\nimport './waybill.css'\r\nimport Logo from '../../assets/icons/site-logo.png'\r\n\r\nconst WayBill = ({data}) => (\r\n    <page id='page'>\r\n        <div className=\"waybill-header\">\r\n            <div className=\"header-ar\">\r\n                <span>شركة شاحنة</span>\r\n                <span>س.ت: 920033216</span>\r\n                <span>جوال: 0533462946 - 0508752514</span>\r\n                <span>الرقم الضريبي: 310160050100003</span>\r\n                <span>2019/06/22</span>\r\n            </div>\r\n            <div className=\"header-center\">\r\n                <img className=\"header-logo\" src={Logo}/>\r\n                <h3>بوليصة شحن</h3>\r\n            </div>\r\n            <div className=\"header-en en\">\r\n                <span>Shahina Company</span>\r\n                <span>C.R.: 920033216</span>\r\n                <span>Mob.: 0533462946 - 0508752514</span>\r\n                <span>VAT: 310160050100003</span>\r\n                <span>2019/06/22</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='barcode'>\r\n            <Barcode value={data.awbNumber} height={25} fontSize={20}/>\r\n        </div>\r\n\r\n        <div className=\"waybill-body\">\r\n            <div className=\"to-text\">\r\n                <span>السادة /</span>\r\n                <span className='client-name'>{data.corporate.arabicName} </span>\r\n                <span className=\"en\">Messrs / </span>\r\n            </div>\r\n\r\n            <div className=\"truck-details\">\r\n                <h3 className='section-title'>السلام عليكم ورحمة الله وبركاته</h3>\r\n                <div><span className=\"label\">تصلكم السيارة</span><span className=\"var\">{data.driver.truckType}</span><span className=\"label en\">Truck Type</span></div>\r\n                <div><span className=\"label\">لوحة رقم</span><span className=\"var\">{data.driver.plateNo}</span><span className=\"label en\">Plate No.</span></div>\r\n                <div><span className=\"label\">اسم السائق</span><span className=\"var\">{`${data.driver.firstName} ${data.driver.lastName}`}</span><span className=\"label en\">Driver Name</span></div>\r\n                <div><span className=\"label\">رقم رخصة القيادة</span><span className=\"var\">{data.driver.licenseNumber}</span><span className=\"label en\">License No.</span></div>\r\n                <div><span className=\"label\">رقم الاقامة</span><span className=\"var\">{data.driver.iqamaNumber}</span><span className=\"label en\">Iqama No.</span></div>\r\n                <div><span className=\"label\">رقم رخصة التشغيل</span><span className=\"var\"></span><span className=\"label en\">Operation License No.</span></div>\r\n                <div><span className=\"label\">اسم المالك للسيارة</span><span className=\"var\">{data.driver.truckOwnerName}</span><span className=\"label en\">Truck Owner Name</span></div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3 className='section-title'>مواصفات البضاعة</h3>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td rowSpan=\"2\" className=\"multiline\">\r\n                            <span>نوع الحمولة</span>\r\n                            <span>Load Type</span>\r\n                        </td>\r\n                        <td rowSpan=\"2\" className=\"multiline\">\r\n                            <span>وزن الحمولة</span>\r\n                            <span>Weight</span>\r\n                        </td> \r\n                        <td colSpan=\"2\">\r\n                            <span>الاتجاه Direction</span>\r\n                        </td>\r\n                        <td colSpan=\"3\">\r\n                            <span>الأجرة Rent</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"multiline\">\r\n                            <span>من</span>\r\n                            <span>From</span>\r\n                        </td>\r\n                        <td className=\"multiline\">\r\n                            <span>إلى</span>\r\n                            <span>To</span>\r\n                        </td>\r\n                        <td className=\"multiline\">\r\n                            <span>المبلغ</span>\r\n                            <span>Amount</span>\r\n                        </td>\r\n                        <td className=\"multiline\">\r\n                            <span>من المكتب</span>\r\n                            <span>From Office</span>\r\n                        </td>\r\n                        <td className=\"multiline\">\r\n                            <span>من العميل</span>\r\n                            <span>From Customer</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{data.loadType}</td>\r\n                        <td>{data.weight}</td> \r\n                        <td>{data.origin}</td>\r\n                        <td>{data.destination}</td>\r\n                        <td>{data.amount}</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"package-date\">\r\n                <div><span className=\"label\">تاريخ المغادرة من المستودع </span><span>{\"\"+(new Date()).toLocaleDateString(\"enSA\", {  year: 'numeric', month: 'numeric', day: 'numeric'})}</span></div>\r\n                <div><span className=\"label\">تاريخ الوصول والتنزيل </span><span></span></div>\r\n            </div>\r\n\r\n            <div>\r\n                <h3 className='section-title'>الشروط</h3>\r\n                <ol className=\"terms\">\r\n                    <li>السائق ملزم بتشريع السيارة عند انتهاء التحميل.</li>\r\n                    <li>نقص البضاعة أو تلفها مسؤولية السائق.</li>\r\n                    <li>يخضع النقل بموجب هذه الشروط للأحكام والشروط الواردة فيها والأنظمة السارية المعمول بها في المملكة العربية السعودية.</li>\r\n                    <li>الشركة غير مسؤولة عن محتويات أي شحنة يستلمها مخالفة أو لم يتم معايتنها بواسطة مندوينا قبل الشحن.</li>\r\n                    <li>الشركة لاتكون مسؤولة عن الضرر الناتج عن انقلاب أو حريق الشاحنة.</li>\r\n                    <li>يكون السائق مسؤول مسؤولية تامة عن البضائع من لحظة توقيعه على استلامها وحتى تسليمها.</li>\r\n                    <li>تعتبر موافقة سائق الشاحنة موافقة ماكلها الأصلي على التحميل ويكون مسؤولاً عن أي ضرر يحث من قبل سائقه عليها.</li>\r\n                </ol>\r\n            </div>\r\n        </div>\r\n        <div className=\"driver-details\">\r\n            <div>\r\n                <div className=\"name\">\r\n                    <span className='label'>اسم السائق</span>\r\n                    <span>{`${data.driver.firstName} ${data.driver.lastName}`}</span>\r\n                </div>\r\n\r\n                <div className='singature'>\r\n                    <span className='label'>التوقيع</span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"name\">\r\n                    <span className='label'>اسم المندوب</span>\r\n                    <span>{`${data.loggedInUserName.firstName} ${data.loggedInUserName.lastName}`}</span>\r\n                </div>\r\n\r\n                <div className='singature'>\r\n                    <span className='label'>التوقيع</span>\r\n                    <span></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='mark'>\r\n            <span className='label'>الختم</span>\r\n        </div>\r\n\r\n        <div className='waybill-footer'>\r\n            <span>+966920033216 - info@shahina.co - http://www.shahina.co - TIN: 1010893981</span>\r\n            <br/>\r\n            <span>Kingdom of Saudi Arabia - Postal Box - 14262 Additional Number 6329 - Phone / 966920033216 - Saudi Investment Bank</span>\r\n            <br/>\r\n            <span>Account Number - IBAN Number: SA16 6500 0000 1274 9952 0001</span>\r\n        </div>\r\n    </page>\r\n)\r\n\r\nexport default WayBill;","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport ActionButton from '../../app/components/button/button';\r\nimport BackButton from \"../../app/components/button/back\"\r\nimport PrintButton from \"../../app/components/button/print\"\r\nimport Modal from '../../components/Modal/DefaultModal';\r\nimport Content from '../../components/Main/Content';\r\nimport Spinner from '../../app/components/spinner';\r\nimport Details from './details';\r\nimport AssignForm from './assign-form'\r\nimport ApproveForm from './approve-form'\r\nimport RejectForm from './reject-from'\r\nimport AssignedDrivers from './assigned-drivers'\r\nimport { NEW, CLIENT_APPROVED, APPROVED, REJECTED, DELIVERED, CLIENT_CANCELD } from './request-status'\r\nimport WayBill from './waybill';\r\n\r\nconst ASSIGN_FORM = \"ASSIGN\";\r\nconst REJECT_FORM = \"REJECT\";\r\nconst APPROVE_FORM = \"APPROVE\";\r\nconst CANCEL_FORM = \"CANCEL\";\r\n\r\nclass ViewDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            printable: false,\r\n            request: {},\r\n            isModalOpen: false,\r\n            activeModal: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const requestId = this.props.match.params.requestId\r\n        this.props.onGetDetails(requestId).then(res => {\r\n            if (res) {\r\n                this.setState({ request: res.data, loading: false })\r\n                if (this.isWayBillPrintable(res.data.requestStatus)) {\r\n                    this.props.onGetWaybillDetails(requestId).then(res => {\r\n                        if (res) {\r\n                            this.setState({ printable: true, waybill: res.data })\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    isWayBillPrintable(status) {\r\n        return status !== NEW || status !== REJECTED\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isModalOpen: false, activeModal: null })\r\n    }\r\n\r\n    openModal = (formType) => {\r\n        if (formType)\r\n            this.setState({ isModalOpen: true, activeModal: formType })\r\n    }\r\n\r\n    renderActionButtons = (status) => {\r\n        const { t, authUser } = this.props;\r\n        const isAdmin = authUser && authUser.roles.filter(f => f.name === 'ROLE_ADMIN').length > 0\r\n        const actions = []\r\n        if (isAdmin) {\r\n            if (status === NEW) {\r\n                actions.push(\r\n                    <ActionButton \r\n                        title={t(\"request.approve-action-btn\")} \r\n                        onClick={() => this.openModal(APPROVE_FORM)} type=\"info\" />\r\n                )\r\n            }\r\n            if (status === CLIENT_APPROVED || status === APPROVED) {\r\n                actions.push(\r\n                    <ActionButton\r\n                        title={t(\"request.assign-action-btn\")}\r\n                        onClick={() => this.openModal(ASSIGN_FORM)} type=\"warn\" />\r\n                )\r\n            }\r\n            if (status !== DELIVERED && status !== CLIENT_CANCELD) {\r\n                actions.push(\r\n                    <ActionButton\r\n                        title={t(\"request.reject-action-btn\")}\r\n                        onClick={() => this.openModal(REJECT_FORM)} type=\"danger\" />\r\n                )\r\n\r\n            }\r\n        } else {\r\n            if (status === NEW) {\r\n                actions.push(\r\n                    <ActionButton\r\n                        title={t(\"request.cancel-action-btn\")}\r\n                        onClick={() => this.confirmCancelAction(t(\"request.confirm-cancel\"), () => this.props.onCancel(this.state.request.id))}\r\n                        type=\"danger\" />\r\n                )\r\n            }\r\n        }\r\n        return actions.map((a, i) => <div key={i}>{a}</div>)\r\n    }\r\n\r\n    confirmCancelAction = (msg, callback) => {\r\n        const t = this.props.t\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                  <div className='confirm-alert'>\r\n                    <h4>{msg}</h4>\r\n                    <button onClick={onClose}>{t('request.cancel')}</button>\r\n                    <button\r\n                      onClick={() => {\r\n                        callback();\r\n                        onClose();\r\n                      }}\r\n                    >\r\n                        {t('request.confirm')}\r\n                    </button>\r\n                  </div>\r\n                );\r\n              }\r\n        });\r\n    }\r\n\r\n    renderModalConent = () => {\r\n        const activeModal = this.state.activeModal\r\n        const requestId = this.state.request.id\r\n        const t = this.props.t\r\n        if (activeModal === APPROVE_FORM) {\r\n            return <ApproveForm onSubmit={this.props.onApprove} requestId={requestId} />\r\n        } else if (activeModal === REJECT_FORM) {\r\n            return <RejectForm onSubmit={this.props.onReject} requestId={requestId} />\r\n        } else if (activeModal === ASSIGN_FORM) {\r\n            return <AssignForm\r\n                {...this.props}\r\n                onGetDrivers={this.props.onGetDrivers}\r\n                onSubmit={this.props.onAssign} />\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const loading = this.state.loading\r\n        const request = this.state.request\r\n        const { authUser } = this.props;\r\n        const isAdmin = authUser && authUser.roles.filter(f => f.name === 'ROLE_ADMIN').length > 0\r\n        if (loading) {\r\n            return (\r\n                <Content title={this.props.t(\"request.view-request\")}>\r\n                    <Spinner />\r\n                </Content>\r\n            )\r\n        } else {\r\n            const showPrint = this.state.printable\r\n            return (\r\n                <React.Fragment>\r\n                    <Content title={this.props.t(\"request.view-request\")}>\r\n                        <div className=\"button-container\">\r\n                            <BackButton title={this.props.t(\"request.back-btn\")} link=\"/requests\" />\r\n                            {\r\n                                showPrint ? <PrintButton title={this.props.t(\"request.print-waybill-btn\")} /> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"button-container\">\r\n                            {this.renderActionButtons(request.requestStatus)}\r\n                        </div>\r\n                        <Details request={request} />\r\n                        {isAdmin?\r\n                            <AssignedDrivers\r\n                                onGetDrivers={() => this.props.onGetAssignedDrivers(request.id)}\r\n                                onPickup={this.props.onPickup}\r\n                                onOutForDelivery={this.props.onOutForDelivery}\r\n                                onArriveAtDestination={this.props.onArriveAtDestination}\r\n                                onComplete={this.props.onComplete} />\r\n                        :null}\r\n                    </Content>\r\n                    {showPrint ? <WayBill data={this.state.waybill} /> : null}\r\n                    <Modal\r\n                        rtl={this.props.lng === 'ar'}\r\n                        isModalOpen={this.state.isModalOpen}\r\n                        closeModal={this.closeModal}\r\n                        content={this.renderModalConent()} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(ViewDetails)","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport List from './list';\r\nimport * as api from './api';\r\nimport * as trkApi from '../truck/api'\r\n// TODO: prevent access to other domains!!\r\nimport { getDrivers } from '../driver/api'\r\nimport './styles.css';\r\nimport RequestComponent from '../requestTruck/RequestComponent';\r\nimport AuthUserContext from '../../context/AuthUserContext';\r\nimport ViewDetails from './view-details';\r\n\r\nclass Container extends React.Component {\r\n\r\n    handleFetchRequests = () => {\r\n        return api.getRequests()\r\n    }\r\n\r\n    handleApproveRequest = (id, price) => {\r\n        api.approve(id, price).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.history.push('/requests')\r\n                toast.success(this.props.t(\"Request is now approved.\"))\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred while trying to approve the request\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred while trying to approve the request\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleRejectRequest = (id, reason) => {\r\n        api.reject(id, reason).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.history.push('/requests')\r\n                toast.success(this.props.t(\"Request is now rejected.\"))\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred while trying to reject the request\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred while trying to reject the request\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleCancelRequest = (id) => {\r\n        api.cancel(id).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.history.push('/requests')\r\n                toast.success(this.props.t(\"Request is now canceld.\"))\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred while trying to cancel the request\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred while trying to cancel the request\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleAssignRequest = (requestId, driversIds) => {\r\n        return api.assign(requestId, driversIds).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.history.push('/requests')\r\n                toast.success(this.props.t(\"The request updated successfully.\"))\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred while trying to assign the request\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred while trying to assign the request\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleGetDrivers = () => {\r\n        return getDrivers().catch(error => {\r\n            toast.error(\"Unable to get drivers\")\r\n            console.error(error)\r\n        })\r\n    }\r\n\r\n    handleGetAssignedDrivers = (requesdId) => {\r\n        return api.getAssignedDrivers(requesdId).catch(error => {\r\n            toast.error(this.props.t(\"Unable to fetch the drivers\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleGetDetails = (id) => {\r\n        return api.getRequestDetails(id)\r\n            .catch(error => {\r\n                toast.error(this.props.t(\"Unable to fetch the request details\"))\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleAddRequest = (request) => {\r\n        return api.addRequest(request).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.history.push('/requests')\r\n                toast.success(this.props.t(\"The Request is Sent.\"))\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred while trying to send the request\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"Unable to send the request\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleGetTruckTypes = () => {\r\n        return trkApi.getTrucks()\r\n    }\r\n\r\n    handleGetWaybill = (id) => {\r\n        return api.getWaybillDetails(id)\r\n            .catch(error => {\r\n                console.error(this.props.t(\"Unable to fetch the request details\"))\r\n            })\r\n    }\r\n\r\n    handlePickup = (driverRequestId, callback) => {\r\n        api.pickup(driverRequestId).then(res => {\r\n            if (res.status === 200) {\r\n                toast.success(this.props.t(\"Updated Successfully.\"))\r\n                callback()\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleOutForDelivery = (driverRequestId, callback) => {\r\n        api.outForDelivery(driverRequestId).then(res => {\r\n            if (res.status === 200) {\r\n                toast.success(this.props.t(\"Updated Successfully.\"))\r\n                callback()\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleArriveAtDestination = (driverRequestId, callback) => {\r\n        api.arriveAtDestination(driverRequestId).then(res => {\r\n            if (res.status === 200) {\r\n                toast.success(this.props.t(\"Updated Successfully.\"))\r\n                callback()\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    handleComplete = (driverRequestId, callback) => {\r\n        api.complete(driverRequestId).then(res => {\r\n            if (res.status === 200) {\r\n                toast.success(this.props.t(\"Updated Successfully.\"))\r\n                callback()\r\n            } else {\r\n                toast.error(this.props.t(\"An error occurred\"))\r\n            }\r\n        }).catch(error => {\r\n            toast.error(this.props.t(\"An error occurred\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthUserContext.Consumer>\r\n                {authUser =>\r\n                    <Switch>\r\n                        <Route exact path=\"/requests\" render={(props) => <List {...props} authUser={authUser} onFetch={this.handleFetchRequests} />} />\r\n                        <Route exact path=\"/requests/add\" render={(props) => <RequestComponent {...props} onSubmit={this.handleAddRequest} onGetTrucks={this.handleGetTruckTypes} />} />\r\n                        <Route exact path=\"/requests/view/:requestId\"\r\n                            render={(props) => (\r\n                                <ViewDetails {...props}\r\n                                    authUser={authUser}\r\n                                    onGetDetails={this.handleGetDetails}\r\n                                    onGetWaybillDetails={this.handleGetWaybill}\r\n                                    onGetDrivers={this.handleGetDrivers}\r\n                                    onAssign={this.handleAssignRequest}\r\n                                    onApprove={this.handleApproveRequest}\r\n                                    onReject={this.handleRejectRequest}\r\n                                    onGetAssignedDrivers={this.handleGetAssignedDrivers}\r\n                                    onPickup={this.handlePickup}\r\n                                    onOutForDelivery={this.handleOutForDelivery}\r\n                                    onArriveAtDestination={this.handleArriveAtDestination}\r\n                                    onComplete={this.handleComplete}\r\n                                    onCancel={this.handleCancelRequest}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Switch>\r\n                }\r\n            </AuthUserContext.Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(Container)","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport ReactTable from 'react-table';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport ActionButton from '../../app/components/button/button';\r\n\r\nimport Content from '../../components/Main/Content';\r\n\r\nclass List extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onFetch().then(res => {\r\n        if (res && res.status === 200) {\r\n          this.setState({data: res.data.content})\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const data = this.state.data\r\n    const columns = [{\r\n      Header: t(\"driver.id\"),\r\n      accessor: 'idNumber', // String-based value accessors!\r\n    }, {\r\n      id: 'fullName',\r\n      Header: t(\"driver.fullName\"),\r\n      accessor: d => d,\r\n      Cell: props => `${props.value.firstName} ${props.value.lastName}` // String-based value accessors!\r\n    }, {\r\n      Header: t(\"driver.mobile\"),\r\n      accessor: 'mobile' // String-based value accessors!\r\n    },\r\n    // {\r\n    //   id: \"actions\",\r\n    //   Header: t(\"driver.actions\"),\r\n    //   accessor: d => d.row,\r\n    //   Cell: ({row}) => (\r\n    //     <ActionButton title={t(\"request.view\")} link={`/drivers/${row.id}`} type=\"info\" />\r\n    //   ),\r\n    //   filterable: false\r\n    // }\r\n]\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Content title={this.props.t(\"driver.list-title\")}>\r\n          <ReactTable\r\n            data={data}\r\n            columns={columns}\r\n            showPageSizeOptions={false}\r\n            minRows={0}\r\n            filterable={true}\r\n            showPageJump={false}\r\n            showPagination={true}\r\n          />\r\n        </Content>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate(\"common\")(List)","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport List from './list';\r\nimport Details from './details'\r\nimport * as api from './api';\r\n\r\nclass Container extends React.Component {\r\n\r\n    handleFetchDrivers = () => {\r\n        return api.getDrivers()\r\n            .catch(error => {\r\n                toast.error(this.props.t(\"Unable to fetch the data\"))\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleGetDetails = (id) => {\r\n        return api.getDriverDetails(id)\r\n        .catch(error => {\r\n            toast.error(this.props.t(\"Unable to fetch driver details\"))\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/drivers\" render={(props) => <List onFetch={this.handleFetchDrivers}/>} />\r\n                {/* <Route exact path=\"/drivers/:driverId\" render={(props) => <Details {...props}/>} /> */}\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(Container)","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport ReactTable from 'react-table'\r\n\r\nimport Content from '../../components/Main/Content';\r\n\r\nclass List extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.onFetch().then(res => {\r\n      this.setState({data: res.data})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const data = this.state.data\r\n\r\n    const columns = [{\r\n      Header: t(\"pricing.discountField\"),\r\n      accessor: 'discount' // String-based value accessors!\r\n    }, {\r\n      Header: t(\"pricing.distanceField\"),\r\n      accessor: 'distance',\r\n    }, {\r\n      Header: t(\"pricing.freightIdField\"),\r\n      accessor: 'freightId',\r\n    },\r\n      {\r\n      Header: t(\"pricing.numberOfTrucksField\"),\r\n      accessor: 'numberOfTrucks',\r\n    },\r\n      {\r\n      Header: t(\"pricing.totalPriceField\"),\r\n      accessor: 'totalPrice',\r\n    },\r\n      {\r\n      Header: t(\"pricing.truckIdField\"),\r\n      accessor: 'truckId',\r\n    }]\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Content title={this.props.t(\"pricing.list-title\")}\r\n          addButtonTitle={this.props.t(\"pricing.add-btn\")}\r\n          addLink=\"pricing/add\"\r\n        >\r\n          <ReactTable\r\n            data={data}\r\n            columns={columns}\r\n            showPageSizeOptions={false}\r\n            minRows={0}\r\n            filterable={true}\r\n            showPageJump={false}\r\n          />\r\n        </Content>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default translate(\"common\")(List)","import React from 'react';\r\nimport {translate} from \"react-i18next\";\r\nimport {Formik, Form} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Button from '../../app/components/button'\r\nimport BackButton from \"../../app/components/button/back\"\r\nimport Content from '../../components/Main/Content';\r\nimport Field from '../../app/components/field'\r\n\r\nconst PricingSchema = Yup.object().shape({\r\n    discount: Yup.number()\r\n        .required('pricing.discountField'),\r\n    distance: Yup.number()\r\n        .required('pricing.distanceField'),\r\n    freightId: Yup.number()\r\n        .required('pricing.freightIdField'),\r\n    numberOfTrucks: Yup.number()\r\n        .required('pricing.numberOfTrucksField'),\r\n    totalPrice: Yup.number()\r\n        .required('pricing.totalPriceField'),\r\n    truckId: Yup.number()\r\n        .required('pricing.truckIdField')\r\n});\r\n\r\nconst PricingForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                discount: '',\r\n                distance: '',\r\n                freightId: '',\r\n                numberOfTrucks: '',\r\n                totalPrice: '',\r\n                truckId: ''\r\n\r\n            }}\r\n            validationSchema={PricingSchema}\r\n            onSubmit={values => {\r\n                props.onSubmit(values)\r\n            }}\r\n        >\r\n            {({errors, touched}) => (\r\n                <Form>\r\n                    <Field name=\"discount\"\r\n                           title={props.t(\"pricing.discountField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n\r\n                    <Field name=\"distance\"\r\n                           title={props.t(\"pricing.distanceField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"freightId\"\r\n                           title={props.t(\"pricing.freightIdField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"numberOfTrucks\"\r\n                           title={props.t(\"pricing.numberOfTrucksField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"totalPrice\"\r\n                           title={props.t(\"pricing.totalPriceField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"truckId\"\r\n                           title={props.t(\"pricing.truckIdField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Button label={props.t(\"pricing.add-submit-btn\")}/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nconst AddForm = (props) => (\r\n    <Content title={props.t(\"pricing.add-form-title\")}>\r\n        <BackButton title={props.t(\"pricing.back-btn\")} link=\"/pricing\"/>\r\n        <PricingForm {...props} />\r\n    </Content>\r\n)\r\n\r\nexport default translate(\"common\")(AddForm)","import axios from 'axios';\r\n\r\nconst PRICING_URL = \"/api/v1/pricing\"\r\n\r\nexport function getPricing() {\r\n    return axios({\r\n        method: 'get',\r\n        url: PRICING_URL,\r\n    })\r\n}\r\n\r\nexport function addPricing(pricing) {\r\n    return axios.post(PRICING_URL, {\r\n            discount: pricing.discount,\r\n            distance: pricing.distance,\r\n            freightId: pricing.freightId,\r\n            numberOfTrucks: pricing.numberOfTrucks,\r\n            totalPrice: pricing.totalPrice,\r\n            truckId: pricing.truckId,\r\n        }\r\n    )\r\n}\r\n\r\nexport function deletePricing(pricingId) {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${PRICING_URL}/${pricingId}`\r\n    })\r\n}\r\n\r\nexport function updatePricing(pricingId) {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${PRICING_URL}/${pricingId}`\r\n    })\r\n}","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Main/Content';\r\nimport List from './list';\r\nimport AddForm from './add-form';\r\nimport * as api from './api';\r\n\r\nclass Container extends React.Component {\r\n\r\n    handleAddPricing = (pricing) => {\r\n        api.addPricing(pricing)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.history.push('/pricing')\r\n                    toast.success(this.props.t(\"pricing.pricing-added\"))\r\n                } else {\r\n                    toast.error(this.props.t(\"pricing.pricing-submit-error\"))\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(this.props.t(\"pricing.pricing-submit-error\"))\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleFetchPricing() {\r\n        return api.getPricing()\r\n            .catch(error => toast.error(\"Unable to fetch the data\"))\r\n    }\r\n\r\n    handleDeletePricing(pricingId) {\r\n        return api.deletePricing(pricingId)\r\n\r\n    }\r\n\r\n    handleUpdatePricing(pricingId, pricing) {\r\n        return api.updatePricing(pricingId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/pricing\" render={(props) => <List onFetch={this.handleFetchPricing}/> } />\r\n                <Route exact path=\"/pricing/add\" render={(props) => <AddForm onSubmit={this.handleAddPricing}/>} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(Container)","import React from 'react';\r\nimport {translate} from \"react-i18next\";\r\nimport ReactTable from 'react-table'\r\n\r\nimport Content from '../../components/Main/Content';\r\n\r\nclass List extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.onFetch().then(res => {\r\n            this.setState({data: res.data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        const data = this.state.data\r\n\r\n        const columns = [\r\n            {\r\n                Header: t(\"contracts.firstNameField\"),\r\n                accessor: 'customer.firstName'\r\n            },\r\n            {\r\n                Header: t(\"contracts.lastNameField\"),\r\n                accessor: 'customer.lastName'\r\n            },\r\n            {\r\n                Header: t(\"contracts.mobileField\"),\r\n                accessor: 'customer.mobile'\r\n            },\r\n            {\r\n                Header: t(\"contracts.emailField\"),\r\n                accessor: 'customer.email'\r\n            },\r\n            {\r\n                Header: t(\"contracts.totalPriceField\"),\r\n                accessor: 'totalPrice'\r\n            },\r\n            {\r\n                Header: t(\"contracts.startContractField\"),\r\n                accessor: 'startContract'\r\n            },\r\n            {\r\n                Header: t(\"contracts.finishContractField\"),\r\n                accessor: 'finishContract'\r\n            },\r\n            {\r\n                Header: t(\"contracts.totalPriceField\"),\r\n                accessor: 'totalPrice'\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Content title={this.props.t(\"contracts.list-title\")}\r\n                         addButtonTitle={this.props.t(\"contracts.add-btn\")}\r\n                         addLink=\"contracts/add\"\r\n                >\r\n                    <ReactTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        showPageSizeOptions={false}\r\n                        minRows={0}\r\n                        filterable={true}\r\n                        showPageJump={false}\r\n                    />\r\n                </Content>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\r\n    \"common\"\r\n)(\r\n    List\r\n)","import React from 'react';\r\nimport {translate} from \"react-i18next\";\r\nimport {Formik, Form} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport \"./style.css\";\r\n\r\nimport Button from '../../app/components/button'\r\nimport BackButton from \"../../app/components/button/back\"\r\nimport Content from '../../components/Main/Content';\r\nimport Field from '../../app/components/field'\r\n\r\nconst ContractSchema = Yup.object().shape({\r\n    customerId: Yup.number()\r\n        .required('contracts.customerIdField'),\r\n    startContract: Yup.date()\r\n        .required('contracts.startContractField'),\r\n    finishContract: Yup.date()\r\n        .required('contracts.finishContractField'),\r\n    totalPrice: Yup.number()\r\n        .required('contracts.totalPriceField')\r\n});\r\n\r\nconst ContractsForm = (props) => {\r\ndebugger\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                startContract: '',\r\n                finishContract: '',\r\n                totalPrice: ''\r\n            }}\r\n            validationSchema={ContractSchema}\r\n            onSubmit={values => {\r\n                props.onSubmit(values)\r\n            }}\r\n        >\r\n            {({errors, touched}) => (\r\n                <Form className='formWrapper'>\r\n                    <Field name=\"customerId\"\r\n                           title={props.t(\"contracts.customerIdField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"startContract\"\r\n                           title={props.t(\"contracts.startContractField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"finishContract\"\r\n                           title={props.t(\"contracts.finishContractField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <Field name=\"totalPrice\"\r\n                           title={props.t(\"contracts.totalPriceField\")}\r\n                           errors={errors} touched={touched} t={props.t}/>\r\n                    <div className='checkbox'>\r\n                        <Field name=\"approved\" type=\"checkbox\"\r\n                               title={props.t(\"contracts.approvedField\")}\r\n                               errors={errors} touched={touched} t={props.t}/>\r\n                        <Field name=\"complete\" type=\"checkbox\"\r\n                               title={props.t(\"contracts.completeField\")}\r\n                               errors={errors} touched={touched} t={props.t}/>\r\n                    </div>\r\n                    <Button label={props.t(\"contracts.add-submit-btn\")}/>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nconst AddForm = (props) => (\r\n    <Content title={props.t(\"contracts.add-form-title\")}>\r\n        <BackButton title={props.t(\"contracts.back-btn\")} link=\"/contracts\"/>\r\n        <ContractsForm {...props} />\r\n    </Content>\r\n)\r\n\r\nexport default translate(\"common\")(AddForm)","import axios from 'axios';\r\n\r\nconst CONTRACT_URL = \"/api/v1/contracts\"\r\n\r\nexport function getContractsAll() {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${CONTRACT_URL}/all`,\r\n    })\r\n}\r\n\r\nexport function addContract(values, pricingIdList) {\r\n    return axios.post(CONTRACT_URL, {\r\n            approved: values.approved,\r\n            complete: values.complete,\r\n            customerId: values.customerId,\r\n            pricingIdList: pricingIdList,\r\n            startContract: values.startContract,\r\n            finishContract: values.finishContract,\r\n            totalPrice: values.totalPrice\r\n        }\r\n    )\r\n}","import React from 'react';\r\nimport { translate } from \"react-i18next\";\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Content from '../../components/Main/Content';\r\nimport List from './list';\r\nimport AddForm from './add-form';\r\nimport * as api from './api';\r\n\r\nclass Container extends React.Component {\r\n\r\n    handleAddContracts = (values, pricingIdList = []) => {\r\n        debugger\r\n        api.addContract(values, pricingIdList)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    this.props.history.push('/contracts')\r\n                    toast.success(this.props.t(\"contracts.contract-added\"))\r\n                } else {\r\n                    toast.error(this.props.t(\"contracts.contract-submit-error\"))\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(this.props.t(\"contracts.contract-submit-error\"))\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleFetchContracts() {\r\n        return api.getContractsAll()\r\n            .catch(error => toast.error(\"Unable to fetch the data\"))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/contracts\" render={(props) => <List onFetch={this.handleFetchContracts}/> } />\r\n                <Route exact path=\"/contracts/add\" render={(props) => <AddForm onSubmit={this.handleAddContracts}/>} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default translate(\"common\")(Container)","import React  from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport ErrorModal from \"../Modal/ErrorModal\";\r\nimport SuccessModal from \"../Modal/SuccessModal\";\r\nimport Content from \"../../containers/Content/ContentLogic\";\r\nimport Header from \"../Header/Header\";\r\nimport Auth from \"../Auth/Auth\"\r\nimport \"../../style/styles.css\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Truck from '../../domain/truck'\r\nimport Request from '../../domain/request'\r\nimport Driver from '../../domain/driver'\r\nimport Pricing from '../../domain/pricing'\r\nimport Contracts from '../../domain/contracts'\r\n\r\nconst Main = props => (\r\n  <div className={props.rtl ? \"main rtl\" : \"main\"}>\r\n    {\r\n      // TODO: move autoClode to config file!\r\n    }\r\n    <ToastContainer autoClose={8000}/>\r\n    <Header\r\n      authUser={props.authUser}\r\n      rtl={props.rtl}\r\n      changeDirection={props.changeDirection}\r\n      history={props.history}\r\n    />\r\n    <ErrorModal />\r\n    <SuccessModal />\r\n    <div className=\"main\">\r\n      {\r\n        // TODO: refactor the routers\r\n      }\r\n      <Switch>\r\n        <Route path=\"/requests\" component={Request}/>\r\n        <Route path=\"/trucks\" component={Truck}/>\r\n        <Route path=\"/drivers\" component={Driver}/>\r\n        <Route path=\"/pricing\" component={Pricing}/>\r\n        <Route path=\"/contracts\" component={Contracts}/>\r\n      </Switch>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport ModalContext from \"../../context/ModalContext\";\r\nimport AuthUserContext from \"../../context/AuthUserContext\";\r\nimport DirectionContext from \"../../context/DirectionContext\";\r\nimport Main from \"../../components/Main/Main\";\r\n\r\nclass MainLogic extends Component {\r\n  render(){\r\n    return(\r\n      <ModalContext.Consumer>\r\n        {value =>\r\n          <AuthUserContext.Consumer>\r\n            {authUser =>\r\n              <DirectionContext.Consumer>\r\n                {direction =>\r\n                  <Main\r\n                    authUser={authUser}\r\n                    toggleModal={value.toggleModal}\r\n                    toggleErrorModal={value.toggleErrorModal}\r\n                    rtl={direction.rtl}\r\n                    changeDirection={direction.changeDirection}\r\n                    history={this.props.history}\r\n                  />\r\n                }\r\n              </DirectionContext.Consumer>\r\n            }\r\n          </AuthUserContext.Consumer>\r\n        }\r\n      </ModalContext.Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainLogic;","import React from 'react';\r\nimport AuthUserContext from './context/AuthUserContext';\r\nimport axios from 'axios';\r\n\r\nconst withAuthentication = (Component) => (\r\n  class WithAuthentication extends React.Component {\r\n    state = {\r\n      authUser: null\r\n    };\r\n\r\n    componentWillMount() {\r\n      axios({\r\n        method: 'get',\r\n        url: '/api/v1/users/me'\r\n      }).then( response => {\r\n        this.setState({ authUser: response.data })\r\n      }\r\n      ).catch((err) => {\r\n        this.setState({ authUser: null });\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const { authUser } = this.state;\r\n\r\n      return (\r\n        <AuthUserContext.Provider value={authUser}>\r\n          <Component />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n)\r\n\r\nexport default withAuthentication;","import React from 'react';\r\n\r\nimport DirectionContext from \"./context/DirectionContext\";\r\n\r\nconst withRtlDirection = (Component) => (\r\n  class withRtlDirection extends React.Component {\r\n    changeDirection = (rtl) => {\r\n      this.setState({ rtl })\r\n    };\r\n\r\n    state = {\r\n      rtl: false,\r\n      changeDirection: this.changeDirection\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <DirectionContext.Provider value={this.state}>\r\n          <Component />\r\n        </DirectionContext.Provider>\r\n      );\r\n    }\r\n  }\r\n)\r\n\r\nexport default withRtlDirection;","import React from 'react';\r\nimport ModalContext from \"./context/ModalContext\";\r\n\r\nconst withModals = (Component) => (\r\n  class withModals extends React.Component {\r\n    toggleErrorModal = (message) => {\r\n      this.setState({\r\n        openErrorModal: !this.state.openErrorModal,\r\n        errorDescription: message\r\n      })\r\n    };\r\n\r\n    toggleSuccessModal = (message) => {\r\n      this.setState({\r\n        openSuccessModal: !this.state.openSuccessModal,\r\n        successDescription: message\r\n      })\r\n    };\r\n\r\n    state = {\r\n      openErrorModal: false,\r\n      openSuccessModal: false,\r\n      errorDescription: \"\",\r\n      successDescription: \"\",\r\n      toggleErrorModal: this.toggleErrorModal,\r\n      toggleSuccessModal: this.toggleSuccessModal,\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <ModalContext.Provider value={this.state}>\r\n          <Component />\r\n        </ModalContext.Provider>\r\n      );\r\n    }\r\n  }\r\n)\r\n\r\nexport default withModals;","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory()\r\n\r\nexport default history;","import axios from 'axios';\r\nimport history from './history'\r\n\r\naxios.interceptors.request.use((config) => {\r\n    const token = window.localStorage.getItem('token')\r\n\r\n    if (token !== null) {\r\n        config.headers['X-Auth-Token'] = token;\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n})\r\n\r\naxios.interceptors.response.use((response) => {\r\n    if (response.status === 200) {\r\n        if (response.headers['x-auth-token'])\r\n        window.localStorage.setItem('token', response.headers['x-auth-token']);\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    if (error.response.status === 401) {\r\n        localStorage.clear()\r\n        history.push(\"/login\")\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n","import React from 'react';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport './style/styles.sass';\r\nimport './style/reset.css';\r\n\r\nimport Main from \"./containers/Main/MainLogic\";\r\nimport withAuthentication from './withAuthentication';\r\nimport withRtlDirection from \"./withRtlDirection\";\r\nimport withError from \"./withModals\";\r\nimport history from \"./history\";\r\nimport AuthUserContext from \"./context/AuthUserContext\"\r\nimport DirectionContext from \"./context/DirectionContext\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Auth from './components/Auth/Auth';\r\nimport './interceptor';\r\n\r\nconst App = (props) => (\r\n  <Router history={history} >\r\n    <Switch>\r\n      <Route\r\n        exact path=\"/login\"\r\n        component={Home}\r\n        props={props}\r\n      />\r\n      <Route\r\n        exact path=\"/**\"\r\n        component={Main}\r\n        props={props}\r\n      />\r\n      {/* <Route component={NoMatch} /> */}\r\n    </Switch>\r\n  </Router>\r\n\r\n);\r\n\r\nfunction NoMatch({ location }) {\r\n  return (\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>\r\n        <DirectionContext.Consumer>\r\n          {direction =>\r\n            <div id=\"main\" className={direction.rtl ? \"main rtl\" : \"main\"}>\r\n              <Header\r\n                authUser={authUser}\r\n                rtl={direction.rtl}\r\n                changeDirection={direction.changeDirection}\r\n                history={history}\r\n              />\r\n              <div className=\"add-item__wrapper content\">\r\n                <div>\r\n                  <h3>\r\n                    No match for <code>{location.pathname}</code>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </DirectionContext.Consumer>\r\n      }\r\n    </AuthUserContext.Consumer>\r\n\r\n  );\r\n}\r\n\r\nfunction Home({ props, location }) {\r\n  return (\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>\r\n        <DirectionContext.Consumer>\r\n          {direction =>\r\n            <div id=\"main\" className={direction.rtl ? \"main rtl\" : \"main\"}>\r\n              <Header\r\n                authUser={authUser}\r\n                rtl={direction.rtl}\r\n                changeDirection={direction.changeDirection}\r\n                history={history}\r\n              />\r\n              <div className=\"add-item__wrapper content\">\r\n                <div>\r\n                  {authUser ? <Redirect to='/requests' /> :\r\n                    <Auth props={props} location={location} history={history} />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </DirectionContext.Consumer>\r\n      }\r\n    </AuthUserContext.Consumer>\r\n\r\n  );\r\n}\r\n\r\nexport default withAuthentication(withError(withRtlDirection(App)));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {I18nextProvider} from 'react-i18next';\r\nimport i18next from 'i18next';\r\n// import registerServiceWorker from './registerServiceWorker';\r\nimport common_ar from \"./translations/ar/common.json\";\r\nimport common_en from \"./translations/en/common.json\";\r\n\r\nimport 'react-table/react-table.css'\r\n\r\ni18next.init({\r\n  interpolation: { escapeValue: false },\r\n  lng: 'en',\r\n  resources: {\r\n    en: {\r\n      common: common_en\r\n    },\r\n    ar: {\r\n      common: common_ar\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <I18nextProvider i18n={i18next} initialLanguage={'en'}>\r\n    <App />\r\n  </I18nextProvider>,\r\n  document.getElementById('root'));\r\n// registerServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/site-logo.75dc4e8f.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow.27c2806c.svg\";","module.exports = __webpack_public_path__ + \"static/media/driver.a81d0137.svg\";"],"sourceRoot":""}